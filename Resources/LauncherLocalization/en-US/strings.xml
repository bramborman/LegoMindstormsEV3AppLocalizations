<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HelpPrivacyAndCookiePolicy" xml:space="preserve">
    <value>Privacy and Cookies policy</value>
    <comment>menu item that opens a link to the privacy and cookies policy page</comment>
  </data>
  <data name="LaunchProblemCancelButtonText" xml:space="preserve">
    <value>Cancel</value>
    <comment>Text for Cancel button in a dialog explaining a launch problem.</comment>
  </data>
  <data name="LaunchProblemDialogTitle" xml:space="preserve">
    <value>LEGO MINDSTORMS EV3 Launch Problem</value>
    <comment>Text for title of dialog explaining a launch problem</comment>
  </data>
  <data name="LaunchProblemExplanation" xml:space="preserve">
    <value>LEGO MINDSTORMS EV3 has detected a problem during application launch. 

Press OK to close the application and get more information about fixing the problem.</value>
    <comment>Explanation for when the software is in a state where we cannot launch the software propertly. We tell the user and then optionally open a webpage with more information on the problem.</comment>
  </data>
  <data name="LaunchProblemOKButtonText" xml:space="preserve">
    <value>OK</value>
    <comment>Text for OK button in a dialog explaining a launch problem. Needs to match the name the button is given in the LaunchProblemExplanation string</comment>
  </data>
  <data name="PrintingAllPages" xml:space="preserve">
    <value>All Pages</value>
    <comment>option in printing for printing all pages</comment>
  </data>
  <data name="PrintingBuildingInstructionsOff" xml:space="preserve">
    <value>Building Instructions Off</value>
    <comment>option in printing for not printing the building instructions</comment>
  </data>
  <data name="PrintingBuildingInstructionsOn" xml:space="preserve">
    <value>Building Instructions On</value>
    <comment>option in printing for printing the building instructions</comment>
  </data>
  <data name="PrintingContent" xml:space="preserve">
    <value>Content</value>
    <comment>Option in printing for printing the Guided Help Content</comment>
  </data>
  <data name="PrintingCurrentPage" xml:space="preserve">
    <value>Current Page</value>
    <comment>Option in printing for printing the current page</comment>
  </data>
  <data name="PrintingDatalogger" xml:space="preserve">
    <value>Data Logger</value>
    <comment>Option in printing for printing the datalogger</comment>
  </data>
  <data name="PrintingDiagram" xml:space="preserve">
    <value>Diagram</value>
    <comment>Option in printing for printing the programming diagram</comment>
  </data>
  <data name="PrintingErrorGeneric" xml:space="preserve">
    <value>Error Printing</value>
    <comment>Generic error for when printing fails.</comment>
  </data>
  <data name="PrintingNoPagesError" xml:space="preserve">
    <value>There are no pages to print.</value>
    <comment>Error when there are no pages to print.</comment>
  </data>
  <data name="PrintingPagesLabel" xml:space="preserve">
    <value>Pages:</value>
    <comment>Label for specific pages textbox on printing</comment>
  </data>
  <data name="PrintingPagesWatermark" xml:space="preserve">
    <value>1,2,4-9</value>
    <comment>DON'T TRANSLATE THIS</comment>
  </data>
  <data name="PrintingSpecificPage" xml:space="preserve">
    <value>Specific Pages</value>
    <comment>option in printing for specific pages</comment>
  </data>
  <data name="PrintingSpecificPagesInputError" xml:space="preserve">
    <value>This field is not formatted correctly. Example of proper formats: 1,2,4,5 or 1,2,4-6,9 or 4-8</value>
    <comment>Error on the printing dialog for putting in the proper page format.</comment>
  </data>
  <data name="PrintingStudentAndTeacherSlides" xml:space="preserve">
    <value>Student and Teacher Pages</value>
    <comment>option in printing for student and teacher pages to be printed</comment>
  </data>
  <data name="PrintingStudentSlides" xml:space="preserve">
    <value>Student Pages</value>
    <comment>option in printing for student pages only to be printed</comment>
  </data>
  <data name="StringValidationASCII" xml:space="preserve">
    <value>This field may only contain the following characters: {0}</value>
    <comment>Validation error for when a text field thta only allows ASCII characters has other none-ascii characters input.</comment>
  </data>
  <data name="StringValidationFileName" xml:space="preserve">
    <value>The file name may only contain the following characters: {0}</value>
    <comment>{0} is where the allowed characters will appear. Do not delete this.</comment>
  </data>
  <data name="StringValidationMaxLength" xml:space="preserve">
    <value>This text can only be {0} characters long.</value>
    <comment>{0} is where the allowed characters will appear. Do not delete this.</comment>
  </data>
  <data name="StringValidationNumber" xml:space="preserve">
    <value>This field may only contain numbers.</value>
    <comment>Validation error for when a text field thta only allows numbers has other characters input.</comment>
  </data>
  <data name="TooltipCommentBlock" xml:space="preserve">
    <value>Comment</value>
    <comment>Tooltip for the comment block</comment>
  </data>
  <data name="TooltipMoveSlideDown" xml:space="preserve">
    <value>Move Slide Down</value>
    <comment>Tooltip for the down arrow button for moving a slide down</comment>
  </data>
  <data name="TooltipMoveSlideUp" xml:space="preserve">
    <value>Move Slide Up</value>
    <comment>Tooltip for the up arrow button for moving a slide up</comment>
  </data>
</root>