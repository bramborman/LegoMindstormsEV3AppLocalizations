<?xml version="1.0" encoding="utf-8"?>
<EditorStrings>
  <PolyGroups ModuleName="LEGO">
    <PolyGroup Name="MediumMotor" DisplayName="Medium Motor">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Medium Motor</b></p>]]></Description>
      <Parameter Name="MotorPort" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#MotorPort">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Speed" DisplayName="Power">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Motor power level. <br/><br/>See Motor Power and Direction.</p>]]></Description>
      </Parameter>
      <Parameter Name="Rotations" DisplayName="Rotations">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement in rotations. </p>]]></Description>
      </Parameter>
      <Parameter Name="Brake At End" DisplayName="Brake at End">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> Applies when the block finishes. <br/><br/>If True, the motor is stopped immediately and is held in position. <br/><br/>If False, motor power stops and the motor is allowed to coast.</p>]]></Description>
      </Parameter>
      <Parameter Name="Degrees" DisplayName="Degrees">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement in degrees. 360 degrees make a full rotation.</p>]]></Description>
      </Parameter>
      <Parameter Name="Seconds" DisplayName="Seconds">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Movement time in seconds.</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureDegrees" DisplayName="Degrees">
        <Description><![CDATA[<p>Context help for Block <b>Degrees</b></p>]]></Description>
      </Block>
      <Block Mode="MeasureRotation" DisplayName="Rotations">
        <Description><![CDATA[<p>Context help for Block <b>Rotations</b></p>]]></Description>
      </Block>
      <Block Mode="MeasureCurrentSpeed" DisplayName="Current Power">
        <Description><![CDATA[<p>Context help for Block <b>Current Power</b></p>]]></Description>
      </Block>
      <Block Mode="Stop" DisplayName="Off">
        <Description><![CDATA[The Off mode turns the motor off. It is usually used to stop a motor that was started by the On mode. See the example above.If Brake at End is True, the motor is stopped immediately. The motor will be held in its stopped position until another Motor block starts that motor, or until the program ends. If Brake at End is False, power to the motor is simply turned off. The motor will coast using any remaining momentum until it stops, or until another Motor block starts.]]></Description>
      </Block>
      <Block Mode="Unlimited" DisplayName="On">
        <Description><![CDATA[The On mode turns the motor on, then immediately continues to the next block in the program. You can control the speed and direction of the motor using the Power input. The motor will run until it is stopped or changed by another block later in the program, or until the program ends.]]></Description>
      </Block>
      <Block Mode="Time" DisplayName="On for Seconds">
        <Description><![CDATA[On for Seconds turns the motor on for the number of seconds in the Seconds input, then turns it off.  The block will wait until the time has passed before the program will continue to the next block. You can control the speed and direction of the motor using the Power input. Use True for Brake at End to stop the motor after exactly the specified number of seconds.]]></Description>
      </Block>
      <Block Mode="Degrees" DisplayName="On for Degrees">
        <Description><![CDATA[On for Degrees turns the motor on for the number of degrees specified in the Degrees input, then turns it off. 360 degrees results in one full turn or rotation of the motor.You can control the speed and direction of the motor using the Power input. Use True for Brake at End to stop the motor after exactly the specified number of degrees.]]></Description>
      </Block>
      <Block Mode="Rotations" DisplayName="On for Rotations">
        <Description><![CDATA[On for Rotations turns the motor on for the number of rotations in the Rotations input, then turns it off.  You can control the speed and direction of the motor using the Power input. Use True for Brake at End to stop the motor after exactly the specified number of rotations.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Motor" DisplayName="Large Motor">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Large Motor</b></p>]]></Description>
      <Parameter Name="MotorPort" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#MotorPort">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Speed" DisplayName="Power">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Motor power level.<br/>See Motor Power and Direction.</p>]]></Description>
      </Parameter>
      <Parameter Name="Brake At End" DisplayName="Brake at End">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> Applies when the block finishes.<br/><br/>If True, the motor is stopped immediately and is held in position.<br/><br/>If False, motor power stops and the motor is allowed to coast.</p>]]></Description>
      </Parameter>
      <Parameter Name="Seconds" DisplayName="Seconds">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Movement time in seconds.</p>]]></Description>
      </Parameter>
      <Parameter Name="Degrees" DisplayName="Degrees">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement in degrees. 360 degrees make a full rotation.</p>]]></Description>
      </Parameter>
      <Parameter Name="Rotations" DisplayName="Rotations">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement in rotations.</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureDegrees" DisplayName="Degrees">
        <Description><![CDATA[<p>Context help for Block <b>Degrees</b></p>]]></Description>
      </Block>
      <Block Mode="MeasureRotation" DisplayName="Rotations">
        <Description><![CDATA[<p>Context help for Block <b>Rotations</b></p>]]></Description>
      </Block>
      <Block Mode="MeasureCurrentSpeed" DisplayName="Current Power">
        <Description><![CDATA[<p>Context help for Block <b>Current Power</b></p>]]></Description>
      </Block>
      <Block Mode="Stop" DisplayName="Off">
        <Description><![CDATA[The Off mode turns the motor off. It is usually used to stop a motor that was started by the On mode. See the example above.If Brake at End is True, the motor is stopped immediately. The motor will be held in its stopped position until another Motor block starts that motor, or until the program ends. If Brake at End is False, power to the motor is simply turned off. The motor will coast using any remaining momentum until it stops, or until another Motor block starts.]]></Description>
      </Block>
      <Block Mode="Unlimited" DisplayName="On">
        <Description><![CDATA[The On mode turns the motor on, then immediately continues to the next block in the program. You can control the speed and direction of the motor using the Power input. The motor will run until it is stopped or changed by another block later in the program, or until the program ends.]]></Description>
      </Block>
      <Block Mode="Time" DisplayName="On for Seconds">
        <Description><![CDATA[On for Seconds turns the motor on for the number of seconds in the Seconds input, then turns it off. The block will wait until the time has passed before the program will continue to the next block. You can control the speed and direction of the motor using the Power input. Use True for Brake at End to stop the motor after exactly the specified number of seconds.]]></Description>
      </Block>
      <Block Mode="Degrees" DisplayName="On for Degrees">
        <Description><![CDATA[On for Degrees turns the motor on for the number of degrees of rotation in the Degrees input, then turns it off. 360 degrees of rotation results in one full turn of the motor.You can control the speed and direction of the motor using the Power input. Use True for Brake at End to stop the motor after exactly the specified number of degrees.]]></Description>
      </Block>
      <Block Mode="Rotations" DisplayName="On for Rotations">
        <Description><![CDATA[On for Rotations turns the motor on for the number of rotations in the Rotations input, then turns it off.You can control the speed and direction of the motor using the Power input. Use True for Brake at End to stop the motor after exactly the specified number of rotations.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Move" DisplayName="Move Steering">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Move Steering</b></p>]]></Description>
      <Parameter Name="Ports" DisplayName="Ports" Link="page.html?Path=editor%2FPortSelector.html#Ports">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Brake At End" DisplayName="Brake at End">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> Applies when the block finishes.<br/><br/>If True, the motors are stopped immediately and held in position.<br/><br/>If False, motor power stops and the motors are allowed to coast.</p>]]></Description>
      </Parameter>
      <Parameter Name="Steering" DisplayName="Steering">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Steering direction.<br/><br/>See Steering and Motor Speed.</p>]]></Description>
      </Parameter>
      <Parameter Name="Speed" DisplayName="Power">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Motor power level.<br/><br/>See Motor Power and Direction.</p>]]></Description>
      </Parameter>
      <Parameter Name="Degrees" DisplayName="Degrees">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement amount in degrees. 360 degrees make a full rotation.</p>]]></Description>
      </Parameter>
      <Parameter Name="Seconds" DisplayName="Seconds">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Movement time in seconds.</p>]]></Description>
      </Parameter>
      <Parameter Name="Rotations" DisplayName="Rotations">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement in rotations.</p>]]></Description>
      </Parameter>
      <Block Mode="Stop" DisplayName="Off">
        <Description><![CDATA[The Off mode turns both motors off. Use the Off mode to stop a robot that was started by the On mode earlier in the program. See the example above.If Brake at End is True, the motors are stopped immediately. The motors will be held in their stopped position until another Move or Motor block starts them, or until the program ends. If Brake at End is False, power to the motors is simply turned off. The motors will coast using any remaining momentum until they stop, or until another Move or Motor block starts.]]></Description>
      </Block>
      <Block Mode="Unlimited" DisplayName="On">
        <Description><![CDATA[The On mode turns both motors on, then immediately continues to the next block in the program. You can control the speed and direction of the motors using the Power and Steering inputs. The motors will run until they are stopped or changed by another block later in the program, or until the program ends.]]></Description>
      </Block>
      <Block Mode="NXTDegrees" DisplayName="On for Degrees">
        <Description><![CDATA[<p>Context help for Block <b>On for Degrees</b></p>]]></Description>
      </Block>
      <Block Mode="Time" DisplayName="On for Seconds">
        <Description><![CDATA[On for Seconds turns both motors on for the number of seconds in the Seconds input, then turns them off.  The block will wait until the time has passed before the program will continue to the next block. You can control the speed and direction of your robot using the Power and Steering inputs. Use Brake at End to stop your robot after exactly the specified number of seconds.]]></Description>
      </Block>
      <Block Mode="Degrees" DisplayName="On for Degrees">
        <Description><![CDATA[On for Degrees turns both motors on, waits until one of them has turned for the number of degrees of rotation in the Degrees input, and then turns both motors off. This can be used to make your robot travel a specific distance or turn a specific amount. 360 degrees of rotation corresponds to one full turn of a motor.You can control the speed and direction of your robot using the Power and Steering inputs. Use Brake at End to stop your robot after exactly the specified number of degrees.]]></Description>
      </Block>
      <Block Mode="Rotations" DisplayName="On for Rotations">
        <Description><![CDATA[On for Rotations turns both motors on, waits until one of them has turned for the number of rotations in the Rotations input, then turns both motors off. This can be used to make your robot travel a specific distance or turn a specific amount.You can control the speed and direction of your robot using the Power and Steering inputs. Use Brake at End to stop your robot after exactly the specified number of motor rotations.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="MoveTank" DisplayName="Move Tank">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Move Tank</b></p>]]></Description>
      <Parameter Name="Ports" DisplayName="Ports" Link="page.html?Path=editor%2FPortSelector.html#Ports">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Brake At End" DisplayName="Brake at End">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> Applies when the block finishes.<br/>If True, the motors are stopped immediately and held in position.<br/>If False, motor power stops and the motors are allowed to coast.</p>]]></Description>
      </Parameter>
      <Parameter Name="Speed Left" DisplayName="Power Left">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Motor power level for the left motor.<br/>See Motor Power and Direction.</p>]]></Description>
      </Parameter>
      <Parameter Name="Speed Right" DisplayName="Power Right">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Motor power level for the right motor.<br/>See Motor Power and Direction.</p>]]></Description>
      </Parameter>
      <Parameter Name="Seconds" DisplayName="Seconds">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Movement time in seconds.</p>]]></Description>
      </Parameter>
      <Parameter Name="Degrees" DisplayName="Degrees">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement amount in degrees. 360 degrees make a full rotation.</p>]]></Description>
      </Parameter>
      <Parameter Name="Rotations" DisplayName="Rotations">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Amount of movement in rotations.</p>]]></Description>
      </Parameter>
      <Block Mode="Stop" DisplayName="Off">
        <Description><![CDATA[The Off mode turns both motors off. Use the Off mode to stop a robot that was started by the On mode earlier in the program. See the example above.If Brake at End is True, the motors are stopped immediately. The motors will be held in their stopped position until another Move or Motor block starts them, or until the program ends. If Brake at End is False, power to the motors is simply turned off. The motors will coast using any remaining momentum until they stop, or until another Move or Motor block starts.]]></Description>
      </Block>
      <Block Mode="Unlimited" DisplayName="On">
        <Description><![CDATA[The On mode turns both motors on, then immediately continues to the next block in the program. You can control the speed and direction of the motors using the Power Left and Power Right inputs. The motors will run until they are stopped or changed by another block later in the program, or until the program ends.]]></Description>
      </Block>
      <Block Mode="Time" DisplayName="On for Seconds">
        <Description><![CDATA[On for Seconds turns both motors on for the number of seconds in the Seconds input, then turns them off.  The block will wait until the time has passed before the program will continue to the next block. You can control the speed and direction of your robot using the Power Left and Power Right inputs. Use Brake at End to stop your robot after exactly the specified number of seconds.]]></Description>
      </Block>
      <Block Mode="Degrees" DisplayName="On for Degrees">
        <Description><![CDATA[On for Degrees turns both motors on, waits until one of them has turned for the number of degrees of rotation in the Degrees input, and then turns both motors off. This can be used to make your robot travel a specific distance or turn a specific amount. 360 degrees of rotation corresponds to one full turn of a motor.You can control the speed and direction of your robot using the Power Left and Power Right inputs. Use Brake at End to stop your robot after exactly the specified number of seconds.]]></Description>
      </Block>
      <Block Mode="Rotations" DisplayName="On for Rotations">
        <Description><![CDATA[On for Rotations turns both motors on, waits until one of them has turned for the number of rotations in the Rotations input, then turns both motors off. This can be used to make your robot travel a specific distance or turn a specific amount.You can control the speed and direction of your robot using the Power Left and Power Right inputs. Use Brake at End to stop your robot after exactly the specified number of seconds.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Display" DisplayName="Display">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Display</b></p>]]></Description>
      <Parameter Name="X" DisplayName="X">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 177<br/><b>Notes:</b> X coordinate 0 is at the left of the display.</p>]]></Description>
      </Parameter>
      <Parameter Name="Y" DisplayName="Y">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 127<br/><b>Notes:</b> Y coordinate 0 is at the bottom of the display.</p>]]></Description>
      </Parameter>
      <Parameter Name="Clear Screen" DisplayName="Clear Screen">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> If True, the display is cleared before the item is drawn.</p>]]></Description>
      </Parameter>
      <Parameter Name="Text" DisplayName="Text">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> Characters from the Supported Text character set.<br/><b>Notes:</b> Text to display.<br/>Choose “Wired” from the Text input on the top of the block to show the Text input for a data wire.</p>]]></Description>
      </Parameter>
      <Parameter Name="Invert Color" DisplayName="Color">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> False = Black<br/>True = White<br/><b>Notes:</b> Drawing text in White puts a black background around the characters.<br/><br/>Drawing shapes in White clears black pixels on the display.</p>]]></Description>
      </Parameter>
      <Parameter Name="Size" DisplayName="Font">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 = Normal<br/>1 = Bold<br/>2 = Large<br/><b>Notes:</b> Normal font is 9 pixels high by 8 wide.<br/>Bold font is 8 pixels high by 8 wide.<br/>Large font is 16 pixels high by 16 wide.</p>]]></Description>
      </Parameter>
      <Parameter Name="Fill" DisplayName="Fill">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> If True, the interior of a shape is filled</p>]]></Description>
      </Parameter>
      <Parameter Name="Filename" DisplayName="File Name">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> Name of an existing Image file<br/><b>Notes:</b> See the Image Editor for details.<br/><br/>Choose “Wired” from the File Name input on the top of the block to show the File Name input for a data wire.</p>]]></Description>
      </Parameter>
      <Parameter Name="Column" DisplayName="Column">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 21<br/><b>Notes:</b> Horizontal starting column.<br/>Columns are 8 pixels wide.<br/>Column 0 is at the left of the display.</p>]]></Description>
      </Parameter>
      <Parameter Name="Row" DisplayName="Row">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 11<br/><b>Notes:</b> Vertical text row or “line number”<br/>Rows are 10 pixels high.<br/>Line 0 is at the top of the display.</p>]]></Description>
      </Parameter>
      <Parameter Name="X1" DisplayName="X1">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 177<br/><b>Notes:</b> X coordinate of the first point in a line</p>]]></Description>
      </Parameter>
      <Parameter Name="Y1" DisplayName="Y1">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 127<br/><b>Notes:</b> Y coordinate of the first point in a line</p>]]></Description>
      </Parameter>
      <Parameter Name="X2" DisplayName="X2">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 177<br/><b>Notes:</b> X coordinate of the second point in a line</p>]]></Description>
      </Parameter>
      <Parameter Name="Y2" DisplayName="Y2">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 127<br/><b>Notes:</b> Y coordinate of the second point in a line</p>]]></Description>
      </Parameter>
      <Parameter Name="Radius" DisplayName="Radius">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Radius of a circle in pixels</p>]]></Description>
      </Parameter>
      <Parameter Name="Width" DisplayName="Width">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Width of a rectangle in pixels</p>]]></Description>
      </Parameter>
      <Parameter Name="Height" DisplayName="Height">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Height of a rectangle in pixels</p>]]></Description>
      </Parameter>
      <Block Mode="NXTString" DisplayName="Text">
        <Description><![CDATA[<p>Context help for Block <b>Text</b></p>]]></Description>
      </Block>
      <Block Mode="File" DisplayName="Image">
        <Description><![CDATA[The Image mode draws a graphic image file. The File Name input is at the top of the block. It lets you choose from a list of image files. The images in the “LEGO Images” category are the image files that are included with the EV3 Software. The images listed in the “Project Images” category are the images that have already been used in your project. This makes it easy to use the same image multiple times in a program or project.If Clear Screen is True, the display will be cleared before the image is drawn. The X and Y inputs specify the Display Coordinates for the upper left corner of the image. The image will be drawn below and to the right of this point, using as much space as necessary to draw the entire image. For image files that are sized to fill the entire display, use X = 0 and Y = 0.]]></Description>
      </Block>
      <Category Name="Text" DisplayName="Text">
        <Block Mode="String" DisplayName="Pixels">
          <Description><![CDATA[The Text – Pixels mode can display text at any location on the EV3 Brick display.If Clear Screen is True, the display will be cleared before the text is drawn.The Text input is at the top of the block. It contains the text string to display. Choose “Wired” to show a Text input that can accept a Data Wire. The text can include any characters in the Supported Text character set.The X and Y inputs specify the Display Coordinates of the starting point of the text, which is the upper-left corner of the displayed text.Use the Color Input to choose the color of the text. If you choose Black, the text will display in black on a white background. If you choose White, the text will display in white on a black background.You can use the Font input to choose from three different typefaces: Normal, Bold, and Large.]]></Description>
        </Block>
        <Block Mode="StringGrid" DisplayName="Grid">
          <Description><![CDATA[The Text – Grid mode displays text aligned to a grid of rows and columns. This makes it easy to display and align multiple lines of text. The height of a row is enough space to display a line of text in the Normal or Bold fonts, and each character in these fonts is one column wide. If Clear Screen is True, the display will be cleared before the text is drawn. The Text input is at the top of the block. It contains the text string to display. Choose “Wired” to show a Text input that can accept a data wire. The text can include any characters in the Supported Text character set.The Column input specifies the starting column (horizontal position) for the text. Each column is 8 pixels wide. The columns are numbered from 0 at the left to 21 at the right. The Row input specifies the row or “line number” (vertical position) for the text. Each row is 10 pixels high. Row 0 is at the top of the display, and row 11 is near the bottom of the display.]]></Description>
        </Block>
      </Category>
      <Category Name="Shapes" DisplayName="Shapes">
        <Block Mode="Line" DisplayName="Line">
          <Description><![CDATA[The Shapes – Line mode draws a straight line between any two points on the display.If Clear Screen is True, the display will be cleared before the line is drawn.The X1 and Y1 inputs specify the Display Coordinates of the first point in the line.The X2 and Y2 inputs specify the coordinates of the second point.You can use the Color input to choose either a black or white line. A white line will only be visible if Clear Screen is False and the line draws over an area where a previous Display Block displayed something black.]]></Description>
        </Block>
        <Block Mode="Circle" DisplayName="Circle">
          <Description><![CDATA[The Shapes – Circle mode draws a circle on the display. If Clear Screen is True, the display will be cleared before the circle is drawn.The X and Y inputs specify the Display Coordinates of the center of the circle. The Radius input specifies the radius of the circle in pixels.If Fill is True, the interior of the circle will be filled. If Fill is False, only the outline of the circle is drawn.You can use the Color input to choose either a black or white circle. A white circle will only be visible if Clear Screen is False and the circle draws over an area where a previous Display block displayed something black.]]></Description>
        </Block>
        <Block Mode="Rectangle" DisplayName="Rectangle">
          <Description><![CDATA[The Shapes – Rectangle mode draws a rectangle on the display.If Clear Screen is True, the display will be cleared before the rectangle is drawn.The X and Y inputs specify the Display Coordinates of the upper left corner of the rectangle. The Width and Height inputs specify the size of the rectangle in pixels.If Fill is True, the interior of the rectangle will be filled. If Fill is False, only the outline of the rectangle is drawn.You can use the Color input to choose either a black or white rectangle. A white rectangle will only be visible if Clear Screen is False and a previous Display Block displayed something black in the same area of the display.]]></Description>
        </Block>
        <Block Mode="Point" DisplayName="Point">
          <Description><![CDATA[The Shapes – Point mode draws a single pixel on the display. If Clear Screen is True, the display will be cleared before the pixel is drawn.The X and Y inputs specify the Display Coordinates of the pixel to draw.You can use the Color input to choose to draw the pixel in either black or white. Drawing in white can be used to clear black pixels drawn by previous Display blocks.]]></Description>
        </Block>
      </Category>
      <Block Mode="Clear" DisplayName="Reset Screen">
        <Description><![CDATA[The Reset Screen mode returns the EV3 Brick display to the normal screen of information shown when a program is running. This screen shows the name of the program and other feedback. When you run a program on the EV3 Brick, this screen is shown until the first Display block in the program executes.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Sound" DisplayName="Sound">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Sound</b></p>]]></Description>
      <Parameter Name="Volume" DisplayName="Volume">
        <Description><![CDATA[<p><b>Type:</b> Number<br/><b>Allowed Values:</b> 0 to 100<br/><b>Notes:</b> A percentage of full volume</p>]]></Description>
      </Parameter>
      <Parameter Name="Play Type" DisplayName="Play Type">
        <Description><![CDATA[<p><b>Type:</b> Number<br/><b>Allowed Values:</b> 0, 1, or 2<br/><b>Notes:</b> 0 = Wait for Completion: The sound plays once, and the program waits for the sound to finish before continuing.<br/><br/>1 = Play Once: The sound plays once, and the program continues immediately.<br/><br/>2 = Repeat: The sound will be repeated continuously until another Sound Block is executed, and the program continues immediately.</p>]]></Description>
      </Parameter>
      <Parameter Name="Duration" DisplayName="Duration">
        <Description><![CDATA[<p><b>Type:</b> Number<br/><b>Allowed Values:</b> ≥ 0<br/><b>Notes:</b> Duration of note or tone in seconds</p>]]></Description>
      </Parameter>
      <Parameter Name="Name" DisplayName="File Name">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> Name of an existing sound file<br/><b>Notes:</b> For example, “Laughing 2”</p>]]></Description>
      </Parameter>
      <Parameter Name="Frequency" DisplayName="Frequency">
        <Description><![CDATA[<p><b>Type:</b> Number<br/><b>Allowed Values:</b> 300 to 10000<br/><b>Notes:</b> Tone frequency in Hz</p>]]></Description>
      </Parameter>
      <Parameter Name="Note" DisplayName="Note">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> “C” through “B”, followed optionally by “#”, followed by “4” through “6”.<br/><b>Notes:</b> A-G is a musical note name.<br/>4-6 is an octave number.<br/>“#” means “sharp”.<br/><br/>Examples: “C4” is “middle C” on a standard piano, and “C#4” is one half step higher.</p>]]></Description>
      </Parameter>
      <Block Mode="Stop" DisplayName="Stop">
        <Description><![CDATA[The Stop mode stops any sound that is currently being played by the EV3 Brick. This is usually used to stop a sound that was started earlier in the program by a Sound Block that didn’t wait for the sound to complete.]]></Description>
      </Block>
      <Block Mode="File" DisplayName="Play File">
        <Description><![CDATA[The Play File mode plays a pre-recorded sound file.The File Name input is at the top of the block. It lets you choose from a list of sound effects, spoken words and phrases. The sounds in the “LEGO Sounds” category are the sound files that are included with the EV3 Software. The sounds listed in the “Project Sounds” category are the sounds that have already been used in your project. This makes it easy to use the same sound multiple times in a program or project. If you choose “Wired” from the File Name input on the top of the block, a File Name input appears in the inputs area of the Sound block. This allows you to supply the name of the sound file with a Data Wire.Note that you need to add the sound file to your Project first by selecting it in the File Name input.The Volume input controls how loud the sound will be. The Play Type input controls whether the block will wait for the sound to finish before the program continues to the next block, and whether the sound will repeat.]]></Description>
      </Block>
      <Block Mode="Tone" DisplayName="Play Tone">
        <Description><![CDATA[The Play Tone mode plays a tone of a specified frequency. The frequency of the tone controls the pitch, in other words, how high or low the sound is.The Frequency input specifies the frequency of the tone in Hz (cycles per second). You can type a number for the frequency or choose a frequency from the list of standard musical note frequencies.The Duration input controls how long the tone will last, in seconds.]]></Description>
      </Block>
      <Block Mode="Note" DisplayName="Play Note">
        <Description><![CDATA[The Play Note mode plays a musical note.The Note input lets you choose the note from a piano keyboard control.The Duration input controls how long the note will last in seconds.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="LED" DisplayName="Brick Status Light">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Brick Status Light</b></p>]]></Description>
      <Parameter Name="Color" DisplayName="Color">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0, 1, or 2<br/><b>Notes:</b> 0 = Green<br/>1 = Orange<br/>2 = Red</p>]]></Description>
      </Parameter>
      <Parameter Name="Pulse" DisplayName="Pulse">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> If True, the light will pulse on and off in a repeating pattern.<br/><br/>If False, the light will stay on constantly.</p>]]></Description>
      </Parameter>
      <Block Mode="Off" DisplayName="Off">
        <Description><![CDATA[The Off mode turns the Brick Status Light off.]]></Description>
      </Block>
      <Block Mode="On" DisplayName="On">
        <Description><![CDATA[The On mode turns the Brick Status Light on. You can choose the color of the light using the Color input. If Pulse is True, the light will pulse on and off in a repeating pattern. After using the On mode, the light will stay on or pulse until another Brick Status Light block is executed, or until the program ends.]]></Description>
      </Block>
      <Block Mode="Reset" DisplayName="Reset">
        <Description><![CDATA[The Reset mode returns the Brick Status Light to the standard green blinking pattern that indicates a program is running on the EV3 Brick.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Variable" DisplayName="Variable">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Variable</b></p>]]></Description>
      <Parameter Name="name" DisplayName="Variable Name">
        <Description><![CDATA[<p>Click the text field at the top of the block to display the popup menu, and select the Name of the variable that you want to use.<br/></p>]]></Description>
      </Parameter>
      <Parameter Name="valueOut" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> (Depends on the block mode)<br/><b>Notes:</b> Value of the selected variable</p>]]></Description>
      </Parameter>
      <Parameter Name="valueIn" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> (Depends on the block mode)<br/><b>Notes:</b> Value to store into the variable</p>]]></Description>
      </Parameter>
      <Category Name="Read" DisplayName="Read">
        <Block Mode="ReadText" DisplayName="Text">
          <Description><![CDATA[The Read mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and get the value stored in it.]]></Description>
        </Block>
        <Block Mode="ReadNumeric" DisplayName="Numeric">
          <Description><![CDATA[The Read mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and get the value stored in it.]]></Description>
        </Block>
        <Block Mode="ReadBoolean" DisplayName="Logic">
          <Description><![CDATA[The Read mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and get the value stored in it.]]></Description>
        </Block>
        <Block Mode="ReadNumericArray" DisplayName="Numeric Array">
          <Description><![CDATA[The Read mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and get the value stored in it.]]></Description>
        </Block>
        <Block Mode="ReadBooleanArray" DisplayName="Logic Array">
          <Description><![CDATA[The Read mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and get the value stored in it.]]></Description>
        </Block>
      </Category>
      <Category Name="Write" DisplayName="Write">
        <Block Mode="WriteText" DisplayName="Text">
          <Description><![CDATA[The Write mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and store a value in it.]]></Description>
        </Block>
        <Block Mode="WriteNumeric" DisplayName="Numeric">
          <Description><![CDATA[The Write mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and store a value in it.]]></Description>
        </Block>
        <Block Mode="WriteBoolean" DisplayName="Logic">
          <Description><![CDATA[The Write mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and store a value in it.]]></Description>
        </Block>
        <Block Mode="WriteNumericArray" DisplayName="Numeric Array">
          <Description><![CDATA[The Write mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and store a value in it.]]></Description>
        </Block>
        <Block Mode="WriteBooleanArray" DisplayName="Logic Array">
          <Description><![CDATA[The Write mode lets you choose a variable that you have already added to your program (see Adding a New Variable) and store a value in it.]]></Description>
        </Block>
      </Category>
    </PolyGroup>
    <PolyGroup Name="Constant" DisplayName="Constant">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Constant</b></p>]]></Description>
      <Parameter Name="valueOut" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> (Depends on the block mode)<br/><b>Notes:</b> Value of the constant in the block output</p>]]></Description>
      </Parameter>
      <Parameter Name="valueIn" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> (Depends on the block mode)<br/><b>Notes:</b> Value of the constant in the Block Text Field</p>]]></Description>
      </Parameter>
      <Block Mode="Text" DisplayName="Text">
        <Description><![CDATA[Enter the value for the constant into the Block Text Field at the top of the block. This value is output to Value.]]></Description>
      </Block>
      <Block Mode="Numeric" DisplayName="Numeric">
        <Description><![CDATA[Enter the value for the constant into the Block Text Field at the top of the block. This value is output to Value.]]></Description>
      </Block>
      <Block Mode="Boolean" DisplayName="Logic">
        <Description><![CDATA[Enter the value for the constant into the Block Text Field at the top of the block. This value is output to Value.]]></Description>
      </Block>
      <Block Mode="NumericArray" DisplayName="Numeric Array">
        <Description><![CDATA[Enter the value for the constant into the Block Text Field at the top of the block. This value is output to Value.]]></Description>
      </Block>
      <Block Mode="BooleanArray" DisplayName="Logic Array">
        <Description><![CDATA[Enter the value for the constant into the Block Text Field at the top of the block. This value is output to Value.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="ArrayOperations" DisplayName="Array Operations">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Array Operations</b></p>]]></Description>
      <Parameter Name="Index" DisplayName="Index">
        <Description><![CDATA[<p><b>Types:</b> Numeric<br/><b>Notes:</b> Location of an array element to access.<br/>0 = First element<br/>1 = Second element<br/>Length – 1 = Last element</p>]]></Description>
      </Parameter>
      <Parameter Name="Size" DisplayName="Length">
        <Description><![CDATA[<p><b>Types:</b> Numeric<br/><b>Notes:</b> Length of the array in Length mode</p>]]></Description>
      </Parameter>
      <Parameter Name="valueIn" DisplayName="Value">
        <Description><![CDATA[<p><b>Types:</b> Numeric,<br/>Logic<br/><b>Notes:</b> Value to append in Append mode.<br/><br/>Value to change an element to in Write at Index mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="valueOut" DisplayName="Value">
        <Description><![CDATA[<p><b>Types:</b> Numeric, Logic<br/><b>Notes:</b> Value of an array element in Read at Index mode</p>]]></Description>
      </Parameter>
      <Parameter Name="arrayInNumeric" DisplayName="Array In">
        <Description><![CDATA[<p><b>Types:</b> Numeric Array, <br/>Logic Array<br/><b>Notes:</b> Array to operate on</p>]]></Description>
      </Parameter>
      <Parameter Name="arrayInBoolean" DisplayName="Array In">
        <Description><![CDATA[<p><b>Types:</b> Numeric Array, <br/>Logic Array<br/><b>Notes:</b> Array to operate on</p>]]></Description>
      </Parameter>
      <Parameter Name="arrayOutNumeric" DisplayName="Array Out">
        <Description><![CDATA[<p><b>Types:</b> Numeric Array, <br/>Logic Array<br/><b>Notes:</b> Array result of the operation</p>]]></Description>
      </Parameter>
      <Parameter Name="arrayOutBoolean" DisplayName="Array Out">
        <Description><![CDATA[<p><b>Types:</b> Numeric Array, <br/>Logic Array<br/><b>Notes:</b> Array result of the operation</p>]]></Description>
      </Parameter>
      <Category Name="Append" DisplayName="Append">
        <Block Mode="Append_Numeric" DisplayName="Numeric">
          <Description><![CDATA[The Append mode adds an element to the end of an array. You can also create a new array. The Array In input specifies an existing array, and the Value specifies the element to add to the end of the array. If you leave Array In blank, a new array will be created with just the new element in it.]]></Description>
        </Block>
        <Block Mode="Append_Boolean" DisplayName="Logic">
          <Description><![CDATA[The Append mode adds an element to the end of an array. You can also create a new array. The Array In input specifies an existing array, and the Value specifies the element to add to the end of the array. If you leave Array In blank, a new array will be created with just the new element in it.]]></Description>
        </Block>
      </Category>
      <Category Name="ReadAtIndex" DisplayName="Read at Index">
        <Block Mode="ReadAtIndex_Numeric" DisplayName="Numeric">
          <Description><![CDATA[The Read at Index mode gets the value of an individual element in an array. The Array In input is the array to use. The element to get is specified by the Index. The first element in an array has an Index of 0, the second element has an Index of 1, and so on. The value of the selected element is output in Value.]]></Description>
        </Block>
        <Block Mode="ReadAtIndex_Boolean" DisplayName="Logic">
          <Description><![CDATA[The Read at Index mode gets the value of an individual element in an array. The Array In input is the array to use. The element to get is specified by the Index. The first element in an array has an Index of 0, the second element has an Index of 1, and so on. The value of the selected element is output in Value.]]></Description>
        </Block>
      </Category>
      <Category Name="WriteAtIndex" DisplayName="Write at Index">
        <Block Mode="WriteAtIndex_Numeric" DisplayName="Numeric">
          <Description><![CDATA[The Write at Index mode changes the value of an individual element in an array. The Array In input is the original array. The element to change is specified by the Index. The first element in an array has an Index of 0, the second element has an Index of 1, and so on. The value to change the selected element to is specified by the Value. A new array with the element changed is output in Array Out. The original array in  Array In is not affected.This table shows some examples of the Write at Index – Numeric mode.]]></Description>
        </Block>
        <Block Mode="WriteAtIndex_Boolean" DisplayName="Logic">
          <Description><![CDATA[The Write at Index mode changes the value of an individual element in an array. The Array In input is the original array. The element to change is specified by the Index. The first element in an array has an Index of 0, the second element has an Index of 1, and so on. The value to change the selected element to is specified by the Value. A new array with the element changed is output in Array Out. The original array in  Array In is not affected.This table shows some examples of the Write at Index – Numeric mode.]]></Description>
        </Block>
      </Category>
      <Category Name="Length" DisplayName="Length">
        <Block Mode="Length_Numeric" DisplayName="Numeric">
          <Description><![CDATA[The Length mode gets the length of an array. The length of the array in the Array In input is output in Length.The length of an array is the number of elements in the array. An empty array has a length of 0, and an array with a single element in has a length of 1.]]></Description>
        </Block>
        <Block Mode="Length_Boolean" DisplayName="Logic">
          <Description><![CDATA[The Length mode gets the length of an array. The length of the array in the Array In input is output in Length.The length of an array is the number of elements in the array. An empty array has a length of 0, and an array with a single element in has a length of 1.]]></Description>
        </Block>
      </Category>
    </PolyGroup>
    <PolyGroup Name="BooleanOperations" DisplayName="Logic Operations">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Logic Operations</b></p>]]></Description>
      <Parameter Name="A" DisplayName="A">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> </p>]]></Description>
      </Parameter>
      <Parameter Name="B" DisplayName="B">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> Not used in NOT mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> Result of the Logic operation (True or False)</p>]]></Description>
      </Parameter>
      <Block Mode="And" DisplayName="And">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Result:</b> True if both A and B are True,<br/>otherwise False</p>]]></Description>
      </Block>
      <Block Mode="Or" DisplayName="Or">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Result:</b> True if either A or B (or both) is True,<br/>False if both A and B are False</p>]]></Description>
      </Block>
      <Block Mode="XOR" DisplayName="XOR">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Result:</b> True if exactly one of A and B is True,<br/>False if both A and B are True,<br/>False if both A and B are False</p>]]></Description>
      </Block>
      <Block Mode="Not" DisplayName="Not">
        <Description><![CDATA[<p><b>Inputs Used:</b> A<br/><b>Result:</b> True if A is False,<br/>False if A is True</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Math" DisplayName="Math">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Math</b></p>]]></Description>
      <Parameter Name="X" DisplayName="A">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> First operand of a simple math operation</p>]]></Description>
      </Parameter>
      <Parameter Name="Y" DisplayName="B">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Second operand of a simple math operation</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Result of the math calculation</p>]]></Description>
      </Parameter>
      <Parameter Name="Base" DisplayName="A">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Base value in Exponent mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Exponent" DisplayName="N">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Exponent value in Exponent mode</p>]]></Description>
      </Parameter>
      <Parameter Name="C" DisplayName="C">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Input for Advanced mode</p>]]></Description>
      </Parameter>
      <Parameter Name="D" DisplayName="D">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Input for Advanced mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Equation" DisplayName="Equation">
        <Description><![CDATA[In the Advanced mode, the Math block can calculate a mathematical expression using up to four inputs and several math operations in one step.Use Data Wires to connect up to four Numeric values to the A, B, C, and D inputs. Unneeded inputs can be left blank or 0. Click the Block Text Field at the top of the block to enter the mathematical expression in text form to calculate. The expression can include the inputs by name as “A”, “B”, “C”, and “D”, numeric constants such as “50”, and math symbols such as “+”. You can also use functions from the list displayed and additional parenthesis to change the order of operations.The result of the expression calculation is output in Result.]]></Description>
      </Parameter>
      <Block Mode="Add" DisplayName="Add">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> A + B</p>]]></Description>
      </Block>
      <Block Mode="Subtract" DisplayName="Subtract">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> A – B</p>]]></Description>
      </Block>
      <Block Mode="Divide" DisplayName="Divide">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> A ÷ B</p>]]></Description>
      </Block>
      <Block Mode="Multiply" DisplayName="Multiply">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> A × B</p>]]></Description>
      </Block>
      <Block Mode="AbsoluteValue" DisplayName="Absolute Value">
        <Description><![CDATA[<p><b>Inputs Used:</b> A<br/><b>Output Result:</b> A if A ≥ 0 -A if A &lt; 0<br/>The result is always ≥ 0.</p>]]></Description>
      </Block>
      <Block Mode="SquareRoot" DisplayName="Square Root">
        <Description><![CDATA[<p><b>Inputs Used:</b> A<br/><b>Output Result:</b> √A</p>]]></Description>
      </Block>
      <Block Mode="Exponent" DisplayName="Exponent">
        <Description><![CDATA[<p><b>Inputs Used:</b> A (base), N (Exponent)<br/><b>Output Result:</b> AN</p>]]></Description>
      </Block>
      <Block Mode="Advanced" DisplayName="Advanced">
        <Description><![CDATA[In the Advanced mode, the Math block can calculate a mathematical expression using up to four inputs and several math operations in one step.Use Data Wires to connect up to four Numeric values to the A, B, C, and D inputs. Unneeded inputs can be left blank or 0. Click the Block Text Field at the top of the block to enter the mathematical expression in text form to calculate. The expression can include the inputs by name as “A”, “B”, “C”, and “D”, numeric constants such as “50”, and math symbols such as “+”. You can also use functions from the list displayed and additional parenthesis to change the order of operations.The result of the expression calculation is output in Result.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Round" DisplayName="Round">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Round</b></p>]]></Description>
      <Parameter Name="Input" DisplayName="Input">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Number to round</p>]]></Description>
      </Parameter>
      <Parameter Name="Output Result" DisplayName="Result">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Result of rounding the Input value</p>]]></Description>
      </Parameter>
      <Parameter Name="Number of Decimals" DisplayName="Number of Decimals">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Number of decimal places to keep in Truncate mode.</p>]]></Description>
      </Parameter>
      <Block Mode="Nearest" DisplayName="To Nearest">
        <Description><![CDATA[The Round To Nearest, Round Up, and Round Down modes round a decimal number in the Input to an integer value in the Result.  Round To Nearest uses standard rounding rules to round to the nearest integer. Round Up always rounds up, and Round Down always rounds down.]]></Description>
      </Block>
      <Block Mode="Up" DisplayName="Round Up">
        <Description><![CDATA[The Round To Nearest, Round Up, and Round Down modes round a decimal number in the Input to an integer value in the Result.  Round To Nearest uses standard rounding rules to round to the nearest integer. Round Up always rounds up, and Round Down always rounds down.]]></Description>
      </Block>
      <Block Mode="Down" DisplayName="Round Down">
        <Description><![CDATA[The Round To Nearest, Round Up, and Round Down modes round a decimal number in the Input to an integer value in the Result.  Round To Nearest uses standard rounding rules to round to the nearest integer. Round Up always rounds up, and Round Down always rounds down.]]></Description>
      </Block>
      <Block Mode="Truncate" DisplayName="Truncate">
        <Description><![CDATA[The Truncate mode lets you eliminate any digits past a specified decimal place in a decimal number. Any digits past the Number of Decimals in the Input are eliminated in the Result. No other digits are affected (the output is not rounded).]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Compare" DisplayName="Compare">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Compare</b></p>]]></Description>
      <Parameter Name="x" DisplayName="A">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> First number for comparison</p>]]></Description>
      </Parameter>
      <Parameter Name="y" DisplayName="B">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Second number for comparison</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> Result of the comparison (True or False)</p>]]></Description>
      </Parameter>
      <Block Mode="Equal" DisplayName="Equal To">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> True if A = B, otherwise False</p>]]></Description>
      </Block>
      <Block Mode="NotEqual" DisplayName="Not Equal To">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> True if A ≠ B, otherwise False</p>]]></Description>
      </Block>
      <Block Mode="GreaterThan" DisplayName="Greater Than">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> True if A &gt; B, otherwise False</p>]]></Description>
      </Block>
      <Block Mode="GreaterOrEqual" DisplayName="Greater Than or Equal To">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> True if A ≥ B, otherwise False</p>]]></Description>
      </Block>
      <Block Mode="LessThan" DisplayName="Less Than">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> True if A &lt; B, otherwise False</p>]]></Description>
      </Block>
      <Block Mode="LessOrEqual" DisplayName="Less Than or Equal To">
        <Description><![CDATA[<p><b>Inputs Used:</b> A, B<br/><b>Output Result:</b> True if A ≤ B, otherwise False</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Range" DisplayName="Range">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Range</b></p>]]></Description>
      <Parameter Name="Test Value" DisplayName="Test Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Number to test</p>]]></Description>
      </Parameter>
      <Parameter Name="Lower Bound" DisplayName="Lower Bound">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Lowest number in range</p>]]></Description>
      </Parameter>
      <Parameter Name="Upper Bound" DisplayName="Upper Bound">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Highest number in range</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> Result of the range comparison (True or False)</p>]]></Description>
      </Parameter>
      <Block Mode="Inside" DisplayName="Inside">
        <Description><![CDATA[The Inside mode sets the Result to True if the Test Value is inside the specified range.]]></Description>
      </Block>
      <Block Mode="Outside" DisplayName="Outside">
        <Description><![CDATA[The Outside mode sets the Result to True if the Test Value is outside of the specified range.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Text" DisplayName="Text">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Text</b></p>]]></Description>
      <Parameter Name="A" DisplayName="A">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> Any text<br/><b>Notes:</b> Skipped if not included</p>]]></Description>
      </Parameter>
      <Parameter Name="B" DisplayName="B">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> Any text<br/><b>Notes:</b> Skipped if not included</p>]]></Description>
      </Parameter>
      <Parameter Name="C" DisplayName="C">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Allowed Values:</b> Any text<br/><b>Notes:</b> Skipped if not included</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> String A followed by string B then string C</p>]]></Description>
      </Parameter>
      <Block Mode="Merge" DisplayName="Merge">
        <Description><![CDATA[The Text block has a single mode named Merge. The input text strings A, B, and C will be combined together (in this order) into a single text string. Any input that is not included will be skipped. The Result output is the combined text string.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Random" DisplayName="Random">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Random</b></p>]]></Description>
      <Parameter Name="Lower" DisplayName="Lower Bound">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Lower bound for Numeric output</p>]]></Description>
      </Parameter>
      <Parameter Name="Upper" DisplayName="Upper Bound">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any Number<br/><b>Notes:</b> Upper bound for Numeric output</p>]]></Description>
      </Parameter>
      <Parameter Name="Number" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric or Logic<br/><b>Notes:</b> Numeric in Numeric mode<br/>Logic in Logic mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Percent True" DisplayName="Probability of True">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 to 100<br/><b>Notes:</b> Percentage probability of True result for Logic output</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric or Logic<br/><b>Notes:</b> Numeric in Numeric mode<br/>Logic in Logic mode</p>]]></Description>
      </Parameter>
      <Block Mode="Numeric" DisplayName="Numeric">
        <Description><![CDATA[The Numeric mode outputs a random integer value. The Value will be set to a random integer that is within the range specified by the Lower Bound and Upper Bound. Each integer value within this range is equally likely to be chosen.]]></Description>
      </Block>
      <Block Mode="Boolean" DisplayName="Logic">
        <Description><![CDATA[The Logic mode outputs a True or False value. The probability that a True value will be output is specified by the Probability of True input. This input is a percentage value from 0 to 100. For example, a probability of 25 would result in a 25% chance that True is output and a 75% chance that False is output.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="StartBlock" DisplayName="Start">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Start</b></p>]]></Description>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p>Context help for Parameter <b>Result</b></p>]]></Description>
      </Parameter>
      <Block Mode="Start" DisplayName="Start" Link="page.html?Path=blocks%2FLEGO%2FStartBlock.html#Mode_Start">
        <Description><![CDATA[The Start block marks the beginning of a programming block sequence in your program. Your program can have more than one sequence. All sequences with a Start block will start automatically when a program is run, and the sequences will run at the same time.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Wait" DisplayName="Wait">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Wait</b></p>]]></Description>
      <Parameter Name="How Long" DisplayName="Seconds">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Number of seconds to wait in Time mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p>Context help for Parameter <b>Result</b></p>]]></Description>
      </Parameter>
      <Block Mode="Timer" DisplayName="Time">
        <Description><![CDATA[In the Time mode, the Wait block waits for the amount of time you specify in the Seconds input. The time is measured from the start of the Wait block.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="LoopCondition" DisplayName="Loop">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Loop</b></p>]]></Description>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p>Context help for Parameter <b>Result</b></p>]]></Description>
      </Parameter>
      <Parameter Name="Do Stop" DisplayName="Until True">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> In Logic mode, the loop will end when this input is True.</p>]]></Description>
      </Parameter>
      <Parameter Name="Iterations To Run" DisplayName="Count">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Number of times to repeat the loop in Count mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="How Long" DisplayName="Seconds">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Number of seconds to repeat the loop in Time mode.</p>]]></Description>
      </Parameter>
      <Block Mode="Boolean" DisplayName="Logic">
        <Description><![CDATA[In the Logic mode, the loop will repeat until the Until input is True at the end of the loop sequence. The loop sequence will always execute at least once, and the Until input is tested at the end of each loop iteration.Use a Data Wire to connect the Until input to a Logic output of a programming block inside the loop. This output should be True when you want to loop to end.]]></Description>
      </Block>
      <Block Mode="Count" DisplayName="Count">
        <Description><![CDATA[In the Count mode, the Count input specifies how many times to repeat the blocks inside the loop.]]></Description>
      </Block>
      <Block Mode="Unlimited" DisplayName="Unlimited">
        <Description><![CDATA[In the Unlimited mode, the blocks inside the loop are repeated forever. Any blocks placed after the loop will never be reached.]]></Description>
      </Block>
      <Block Mode="Time" DisplayName="Time">
        <Description><![CDATA[In the Time mode, you can specify an amount of time for the loop to repeat in the Seconds input. The time is measured from the beginning of the loop.The time limit is tested only at the end of the loop sequence. The loop sequence will always execute at least once, and the loop will continue back to the beginning only if the elapsed time at that moment is less than Seconds.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="CaseSelector" DisplayName="Switch">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Case Selector</b></p>]]></Description>
      <Parameter Name="Result" DisplayName="Result">
        <Description><![CDATA[<p>Context help for Parameter <b>Result</b></p>]]></Description>
      </Parameter>
      <Parameter Name="Boolean" DisplayName="Logic">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> Used to select a Case in Logic mode</p>]]></Description>
      </Parameter>
      <Parameter Name="String" DisplayName="String">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> Used to select a Case in Text mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Number" DisplayName="Number">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Used to select a Case in Numeric mode.</p>]]></Description>
      </Parameter>
      <Block Mode="Boolean" DisplayName="Logic">
        <Description><![CDATA[In the Logic mode, a Switch chooses between a True Case and a False Case based on the value of the Logic input. You could connect a Logic output from any programming block to the Logic input using a Data Wire.Programming Example: See the Compare Block.]]></Description>
      </Block>
      <Block Mode="String" DisplayName="Text">
        <Description><![CDATA[In the Text mode, the Switch compares the value of the Text input to two or more Text values that you specify, with a Case for each value. The Case that has a value that matches the Text input will execute. If no values match, the Default Case will execute. See Testing for Multiple Values above for information on creating multiple Cases. Each Case in Text mode will have a Text value that you can type directly into its Case Value.]]></Description>
      </Block>
      <Block Mode="Numeric" DisplayName="Numeric">
        <Description><![CDATA[In the Numeric mode, the Switch compares the value of the Number input to two or more Numeric values that you specify, with a Case for each value. The Case that has a value that matches the Number input will execute. If no values match, the Default Case will execute. See Testing for Multiple Values above for information on creating multiple Cases. Each Case in Numeric mode will have a Numeric value that you can enter directly into its Case Value.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="SwitchNonTabbed" DisplayName="Switch">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Switch</b></p>]]></Description>
    </PolyGroup>
    <PolyGroup Name="SwitchTabbed" DisplayName="Switch">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Switch</b></p>]]></Description>
    </PolyGroup>
    <PolyGroup Name="Interrupt" DisplayName="Loop Interrupt">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Loop Interrupt</b></p>]]></Description>
      <Parameter Name="InterruptName" DisplayName="Interrupt Name">
        <Description><![CDATA[The Loop Interrupt block has a single mode. The Block Text Field at the top of the block displays the Loop Name of the loop to interrupt (see the Loop block). Click the Block Text Field to display the Popup Menu. The Popup Menu will list the names of the Loop blocks in your program. Select the name of the loop that you want to interrupt from the list.When the Loop Interrupt block executes, the specified loop will end immediately, and the program will skip to any blocks that are after the loop.]]></Description>
      </Parameter>
      <Block Mode="Interrupt" DisplayName="Loop Interrupt">
        <Description><![CDATA[The Loop Interrupt block has a single mode. The Block Text Field at the top of the block displays the Loop Name of the loop to interrupt (see the Loop block). Click the Block Text Field to display the Popup Menu. The Popup Menu will list the names of the Loop blocks in your program. Select the name of the loop that you want to interrupt from the list.When the Loop Interrupt block executes, the specified loop will end immediately, and the program will skip to any blocks that are after the loop.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="LoopIndex" DisplayName="LoopIndex">
      <Description><![CDATA[<p>Context help for PolyGroup <b>LoopIndex</b></p>]]></Description>
      <Parameter Name="Loop Index" DisplayName="Loop Index" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#LoopIndex">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> The number of times the loop has completed. The Count is 0 during the first time through the loop.</p>]]></Description>
      </Parameter>
      <Block Mode="LoopIndex" DisplayName="Loop Index" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopIndex">
        <Description><![CDATA[The Count output at the beginning of a Loop block tells you how many times the loop sequence has executed. You can use the Count inside the loop to make the loop sequence do something different each time the loop repeats.The Count is 0 during the first time through the loop, and it increases by 1 each time the loop repeats.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="BrickButton" DisplayName="Brick Buttons">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Brick Buttons</b></p>]]></Description>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of the Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Value" DisplayName="Button ID">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> The pressed button:<br/>0 = None<br/>1 = Left<br/>2 = Center<br/>3 = Right<br/>4 = Up<br/>5 = Down</p>]]></Description>
      </Parameter>
      <Parameter Name="Buttons" DisplayName="Set of Brick Button IDs">
        <Description><![CDATA[<p><b>Type:</b> Numeric Array<br/><b>Allowed Values:</b> (Each element) 0 – 5<br/><b>Notes:</b> (Each element):<br/>0 = None<br/>1 = Left<br/>2 = Center<br/>3 = Right<br/>4 = Up<br/>5 = Down</p>]]></Description>
      </Parameter>
      <Parameter Name="Action" DisplayName="State">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 2<br/><b>Notes:</b> Button state to test for:<br/>0 = Released<br/>1 = Pressed<br/>2 = Bumped</p>]]></Description>
      </Parameter>
      <Block Mode="Measure" DisplayName="Brick Buttons">
        <Description><![CDATA[The Measure mode outputs the ID of the button that is currently pressed to Button ID.]]></Description>
      </Block>
      <Block Mode="Compare" DisplayName="Brick Buttons">
        <Description><![CDATA[In the Compare mode, you can choose which state of a button to test (Released, Pressed, or Bumped) in the Action input. You can also test a set of buttons to see if any of them matches the specified state.In the Set of Brick Button IDs, select the button or the set of buttons you want to test. The Compare Result will be True if any of the selected buttons matches the specified Action. The ID of the button, which matches the specified action, will be output in Button ID.]]></Description>
      </Block>
      <Block Mode="ChangeBrickButton" DisplayName="Brick Buttons" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeBrickButton">
        <Description><![CDATA[The Brick Buttons – Change – Brick Buttons mode waits for any one of the Brick Buttons to be pressed or released. The Button ID of the button that was pressed or released is output in Button Changed. See Using the Brick Buttons for more information about the Brick Buttons.]]></Description>
      </Block>
      <Block Mode="WaitBrickButtonCompare" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitBrickButtonCompare">
        <Description><![CDATA[You can wait for one or more of the Brick Buttons to be Pressed, Released, or Bumped. For example, you could wait for the Center button to be Pressed. See Using the Brick Buttons for more information about the Brick Buttons.Select one or more Brick Buttons in the input Set of Brick Button IDs and select Released, Pressed, or Bumped as the  Action. The Wait block will wait until any one of the selected buttons to do the selected action. The Measured Value output indicates which button (if any) is pressed at the end.]]></Description>
      </Block>
    <Block Mode="WaitBrickButtonChangeBrickButton" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitBrickButtonChangeBrickButton">
        <Description><![CDATA[The Brick Buttons – Change – Brick Buttons mode waits for any one of the Brick Buttons to be pressed or released. The Button ID of the button that was pressed or released is output in Button Changed. See Using the Brick Buttons for more information about the Brick Buttons.]]></Description>
      </Block>
    <Block Mode="LoopBrickButtonCompare" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopBrickButtonCompare">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until one of the selected buttons does the selected action.<br/><br/>See Using the Brick Buttons.</p>]]></Description>
      </Block>
    <Block Mode="SwitchBrickButtonCompare" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchBrickButtonCompare">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases depending on whether one of the selected Brick Buttons is Pressed, Released, or Bumped.<br/><b>See:</b> Using the Brick Buttons</p>]]></Description>
      </Block>
    <Block Mode="SwitchBrickButtonMeasure" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchBrickButtonMeasure">
        <Description><![CDATA[<p><b>Use:</b> Choose between two or more Cases depending on which Brick Button is pressed.<br/><b>See:</b> Using the Brick Buttons</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="ColorSensor" DisplayName="Color Sensor" DisplayNamePrefix="Color">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Color Sensor</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="Threshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Amount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Color" DisplayName="Color">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Detected color number: <br/>0 = No Color <br/>1 = Black <br/>2 = Blue <br/>3 = Green <br/>4 = Yellow <br/>5 = Red <br/>6 = White <br/>7 = Brown</p>]]></Description>
      </Parameter>
      <Parameter Name="Value" DisplayName="Light">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> The sensor data value used for a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="CalibrateValueMin" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 – 100<br/><b>Notes:</b> Light intensity for Calibrate modes</p>]]></Description>
      </Parameter>
      <Parameter Name="CalibrateValueMax" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 – 100<br/><b>Notes:</b> Light intensity for Calibrate modes</p>]]></Description>
      </Parameter>
      <Parameter Name="Set of colors" DisplayName="Set of Colors">
        <Description><![CDATA[<p><b>Type:</b> Numeric Array<br/><b>Allowed Values:</b> Each element: 0 – 7<br/><b>Notes:</b> Selected color(s) to test for in Compare – Color mode:<br/>0 = No Color <br/>1 = Black <br/>2 = Blue <br/>3 = Green <br/>4 = Yellow <br/>5 = Red <br/>6 = White <br/>7 = Brown</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureColor" DisplayName="Color">
        <Description><![CDATA[The Measure – Color mode outputs the detected color number in  Color.]]></Description>
      </Block>
      <Block Mode="MeasureReflectedLight" DisplayName="Reflected Light Intensity">
        <Description><![CDATA[The Measure – Reflected Light Intensity mode outputs the light intensity in Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureAmbientLight" DisplayName="Ambient Light Intensity">
        <Description><![CDATA[The Measure – Ambient Light Intensity mode outputs the light intensity in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareColor" DisplayName="Color">
        <Description><![CDATA[In the Compare – Color mode, you can select one or more colors in the Set of Colors. The Compare Result output will be True if the detected color matches any of the selected colors. The detected color is output to Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareReflectedLight" DisplayName="Reflected Light Intensity">
        <Description><![CDATA[The Compare – Reflected Light Intensity and Compare – Ambient Light Intensity modes compare the detected light intensity to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the detected light intensity is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareAmbientLight" DisplayName="Ambient Light Intensity">
        <Description><![CDATA[The Compare – Reflected Light Intensity and Compare – Ambient Light Intensity modes compare the detected light intensity to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the detected light intensity is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="ChangeColor" DisplayName="Color" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeColor">
        <Description><![CDATA[The Color Sensor – Change – Color mode waits for the color number detected by the Color Sensor in Color mode (0-7) to change. The ending color detected is output in Color. See Using the Color Sensor for more information about using the Color Sensor in Color mode.]]></Description>
      </Block>
      <Block Mode="ChangeReflectedLight" DisplayName="Reflected Light Intensity" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeReflectedLight">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeAmbientLight" DisplayName="Ambient Light Intensity" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeAmbientLight">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="WaitColorSensorCompareColor" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitColorSensorCompareColor">
        <Description><![CDATA[You can wait for the Color Sensor to detect one or more specified colors. For example, you could wait for the Color Sensor to detect black. See Using the Color Sensor for more information about the Color Sensor in Color mode.Select one or more colors in the Set of Colors input. The block will wait until any one of the selected colors is detected. The detected color is output in Measured Value.]]></Description>
      </Block>
    <Block Mode="WaitColorSensorCompareReflectedLight" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Color.html#Mode_WaitColorSensorCompareReflectedLight">
        <Description><![CDATA[<p><b>Mode:</b> Color Sensor - Compare - Reflected Light Intensity<br/><b>Use:</b> Wait for the reflected light intensity to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitColorSensorCompareAmbientLight" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Color.html#Mode_WaitColorSensorCompareAmbientLight">
        <Description><![CDATA[<p><b>Mode:</b> Color Sensor - Compare - Ambient Light Intensity<br/><b>Use:</b> Wait for the ambient light intensity to reach a certain value.</p>]]></Description>
      </Block>
     <Block Mode="WaitColorSensorChangeColor" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitColorSensorChangeColor">
        <Description><![CDATA[The Color Sensor – Change – Color mode waits for the color number detected by the Color Sensor in Color mode (0-7) to change. The ending color detected is output in Color. See Using the Color Sensor for more information about using the Color Sensor in Color mode.]]></Description>
      </Block>
    <Block Mode="WaitColorSensorChangeReflectedLight" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitColorSensorChangeReflectedLight">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitColorSensorChangeAmbientLight" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitColorSensorChangeAmbientLight">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="LoopColorSensorCompareColor" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopColorSensorCompareColor">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until one of the selected colors is detected. <br/><br/>See Using the Color Sensor.</p>]]></Description>
      </Block>
    <Block Mode="LoopColorSensorCompareReflectedLight" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Color.html#Mode_LoopColorSensorCompareReflectedLight">
        <Description><![CDATA[<p><b>Mode:</b> Color Sensor - Reflected Light Intensity<br/><b>Use:</b> Repeat a sequence of blocks until the reflected light intensity reaches a certain value.</p>]]></Description>
      </Block>
    <Block Mode="LoopColorSensorCompareAmbientLight" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Color.html#Mode_LoopColorSensorCompareAmbientLight">
        <Description><![CDATA[<p><b>Mode:</b> Color Sensor - Ambient Light Intensity<br/><b>Use:</b> Repeat a sequence of blocks until the ambient light intensity reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchColorSensorMeasureColor" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchColorSensorMeasureColor">
        <Description><![CDATA[<p><b>Use:</b> Choose between two or more Cases depending on which color is detected.<br/><b>See:</b> Using the Color Sensor</p>]]></Description>
      </Block>
      <Block Mode="SwitchColorSensorCompareColor" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchColorSensorCompareColor">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases depending on whether or not one of the selected colors is detected<br/><b>See:</b> Using the Color Sensor</p>]]></Description>
      </Block>	  	  
      <Block Mode="SwitchColorSensorCompareReflectedLight" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Color.html#Mode_SwitchColorSensorCompareReflectedLight">
       <Description><![CDATA[<p><b>Mode:</b> Color Sensor - Compare - Reflected Light Intensity<br/><b>Use:</b> Choose between two sequences of blocks depending on the reflected light intensity.</p>]]></Description>
      </Block>
      <Block Mode="SwitchColorSensorCompareAmbientLight" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Color.html#Mode_SwitchColorSensorCompareAmbientLight">
       <Description><![CDATA[<p><b>Mode:</b> Color Sensor - Compare - Ambient Light Intensity<br/><b>Use:</b> Choose between two sequences of blocks depending on the ambient light intensity.</p>]]></Description>
      </Block>	  
    <Category Name="Calibrate" DisplayName="Calibrate">
        <Category Name="ReflectedLight" DisplayName="Reflected Light Intensity">
          <Block Mode="CalibrateMinColor" DisplayName="Minimum">
            <Description><![CDATA[The Calibrate – Minimum mode allows you to specify the minimum light intensity in the Value input. After calibration, the Color Sensor will report this light intensity as 0 or the value specified.]]></Description>
          </Block>
          <Block Mode="CalibrateMaxColor" DisplayName="Maximum">
            <Description><![CDATA[The Calibrate – Maximum mode allows you to specify the maximum light intensity in the Value input. After calibration, the Color Sensor will report this light intensity as 100 or the value specified.]]></Description>
          </Block>
          <Block Mode="CalibrateResetColor" DisplayName="Reset">
            <Description><![CDATA[The Calibrate – Reset mode restores the Color Sensor calibration to its default state.]]></Description>
          </Block>
        </Category>
      </Category>
    </PolyGroup>
    <PolyGroup Name="Gyro" DisplayName="Gyro Sensor" DisplayNamePrefix="Gyro">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Gyro Sensor</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="Threshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Change" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Change">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Angle" DisplayName="Angle">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Rotation angle in degrees.<br/>Measured from the last reset.<br/>Reset with the Reset mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Rate" DisplayName="Rate">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Rotation rate in degrees per second.</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureAngle" DisplayName="Angle">
        <Description><![CDATA[The Measure – Angle mode outputs the rotation angle in Angle. The angle is measured relative to the last time the sensor was reset. Use the Reset mode to reset the angle to 0.]]></Description>
      </Block>
      <Block Mode="MeasureRate" DisplayName="Rate">
        <Description><![CDATA[The Measure – Rate mode outputs the rotation rate in Rate.]]></Description>
      </Block>
      <Block Mode="MeasureAngleAndRate" DisplayName="Angle and Rate">
        <Description><![CDATA[The Measure – Angle and Rate mode outputs the rotation angle in Angle and the rotation rate in Rate.]]></Description>
      </Block>
      <Block Mode="CompareAngle" DisplayName="Angle">
        <Description><![CDATA[The Compare – Angle mode compares the rotation angle to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the rotation angle is output in Angle.]]></Description>
      </Block>
      <Block Mode="CompareRate" DisplayName="Rate">
        <Description><![CDATA[The Compare – Rate mode compares the rotation rate to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the rotation rate is output in Rate.]]></Description>
      </Block>
      <Block Mode="Reset" DisplayName="Reset">
        <Description><![CDATA[The Reset mode resets the rotation angle of the sensor to 0 (zero). Measurements of the rotation angle measure the motion relative to the last time the sensor was reset.]]></Description>
      </Block>
      <Block Mode="ChangeAngle" DisplayName="Angle" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeAngle">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeRate" DisplayName="Rate" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeRate">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="WaitGyroCompareAngle" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Gyro.html#Mode_WaitGyroCompareAngle">
        <Description><![CDATA[<p><b>Mode:</b> Gyro Sensor - Compare<br/><b>Use:</b> Wait for the rotation angle or rate to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitGyroCompareRate" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Gyro.html#Mode_WaitGyroCompareRate">
        <Description><![CDATA[<p><b>Mode:</b> Gyro Sensor - Compare<br/><b>Use:</b> Wait for the rotation angle or rate to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="WaitGyroChangeAngle" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitGyroChangeAngle">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitGyroChangeRate" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitGyroChangeRate">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="LoopGyroCompareAngle" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Gyro.html#Mode_LoopGyroCompareAngle">
        <Description><![CDATA[<p><b>Mode:</b> Gyro Sensor<br/><b>Use:</b> Repeat a sequence of blocks until the rotation angle or rate reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopGyroCompareRate" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Gyro.html#Mode_LoopGyroCompareRate">
        <Description><![CDATA[<p><b>Mode:</b> Gyro Sensor<br/><b>Use:</b> Repeat a sequence of blocks until the rotation angle or rate reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchGyroCompareAngle" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Gyro.html#Mode_SwitchGyroCompareAngle">
        <Description><![CDATA[<p><b>Mode:</b> Gyro Sensor<br/><b>Use:</b> Choose between two sequences of blocks based on the rotation angle or rate.</p>]]></Description>
      </Block>
      <Block Mode="SwitchGyroCompareRate" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Gyro.html#Mode_SwitchGyroCompareRate">
        <Description><![CDATA[<p><b>Mode:</b> Gyro Sensor<br/><b>Use:</b> Choose between two sequences of blocks based on the rotation angle or rate.</p>]]></Description>
      </Block>		 

    </PolyGroup>
    <PolyGroup Name="InfraredSensor" DisplayName="Infrared Sensor" DisplayNamePrefix="Infrared">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Infrared Sensor</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="Threshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="HeadingThreshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Amount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="HeadingAmount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#HeadingAmount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Values:</b> True/False<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Proximity" DisplayName="Proximity">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Values:</b> 0 to 100<br/><b>Notes:</b> The beacon or object proximity. 0 means very close, and 100 means far away. The Proximity will be 100 if the beacon or object is not detected at all.</p>]]></Description>
      </Parameter>
      <Parameter Name="Channel" DisplayName="Channel">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 1 - 4<br/><b>Notes:</b> The channel on the IR Beacon to detect.</p>]]></Description>
      </Parameter>
      <Parameter Name="Heading" DisplayName="Heading">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Values:</b> -25 to 25<br/><b>Notes:</b> The beacon heading. 0 means the beacon is directly in front of the sensor, negative values are to the left, and positive values are to the right.</p>]]></Description>
      </Parameter>
      <Parameter Name="Valid" DisplayName="Detected">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Values:</b> True/False<br/><b>Notes:</b> True if the beacon is detected.</p>]]></Description>
      </Parameter>
      <Parameter Name="Button" DisplayName="Button ID">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Values:</b> 0 - 11<br/><b>Notes:</b> Identifies which button, or combination of buttons, is pressed on the IR Beacon.<br/>See Using the Infrared Sensor Remote Mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Set of remote button IDs" DisplayName="Set of Remote Button IDs">
        <Description><![CDATA[<p><b>Type:</b> Numeric Array<br/><b>Allowed Values:</b> Each element: <br/>0 - 11<br/><b>Notes:</b> Button ID(s) to test.<br/>See Using the Infrared Sensor Remote Mode.</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureProximity" DisplayName="Proximity">
        <Description><![CDATA[The Measure – Proximity mode uses the Infrared Sensor in Proximity mode. The proximity is output in Proximity.]]></Description>
      </Block>
      <Block Mode="MeasureBeaconSeeker" DisplayName="Beacon">
        <Description><![CDATA[The Measure – Beacon mode uses the Infrared Sensor in Beacon mode. Set the Channel to the beacon channel that you want to detect. The beacon proximity is output in Proximity, and the beacon heading is output in Heading.The Detected output is True if the beacon is detected. If the beacon is not detected, Detected will be False, Proximity will be 100, and Heading will be 0.]]></Description>
      </Block>
      <Block Mode="MeasureBeaconSeekerDataloggingHeading" DisplayName="Beacon Heading">
        <Description><![CDATA[The Measure – Beacon mode uses the Infrared Sensor in Beacon mode. Set the Channel to the beacon channel that you want to detect. The beacon proximity is output in Proximity, and the beacon heading is output in Heading.The Detected output is True if the beacon is detected. If the beacon is not detected, Detected will be False, Proximity will be 100, and Heading will be 0.]]></Description>
      </Block>
      <Block Mode="MeasureBeaconSeekerDataloggingProximity" DisplayName="Beacon Proximity">
        <Description><![CDATA[The Measure – Beacon mode uses the Infrared Sensor in Beacon mode. Set the Channel to the beacon channel that you want to detect. The beacon proximity is output in Proximity, and the beacon heading is output in Heading.The Detected output is True if the beacon is detected. If the beacon is not detected, Detected will be False, Proximity will be 100, and Heading will be 0.]]></Description>
      </Block>
      <Block Mode="MeasureBeaconRemote" DisplayName="Remote">
        <Description><![CDATA[The Measure – Remote mode uses the Infrared Sensor in Remote mode. Set Channel to the channel used by the IR Beacon. The Button ID of the currently pressed button, or combination of buttons, is output in Button ID.]]></Description>
      </Block>
      <Block Mode="CompareProximity" DisplayName="Proximity">
        <Description><![CDATA[The Compare – Proximity, Compare – Beacon Heading, and Compare – Beacon Proximity modes compare the sensor data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sensor data is output in the chosen sensor data type.]]></Description>
      </Block>
      <Block Mode="CompareBeaconSeekerHeading" DisplayName="Beacon Heading">
        <Description><![CDATA[The Compare – Proximity, Compare – Beacon Heading, and Compare – Beacon Proximity modes compare the sensor data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sensor data is output in the chosen sensor data type.]]></Description>
      </Block>
      <Block Mode="CompareBeaconSeekerProximity" DisplayName="Beacon Proximity">
        <Description><![CDATA[The Compare – Proximity, Compare – Beacon Heading, and Compare – Beacon Proximity modes compare the sensor data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sensor data is output in the chosen sensor data type.]]></Description>
      </Block>
      <Block Mode="CompareRemote" DisplayName="Remote">
        <Description><![CDATA[The Compare – Remote mode uses the Infrared Sensor in Remote mode. You can select one or more Button ID values in the Set of Remote Button IDs. The Compare Result output will be True if any of the selected buttons is currently pressed on the IR Beacon. The Button ID output will be the Button ID of the currently pressed button or button combination.]]></Description>
      </Block>
      <Block Mode="ChangeProximity" DisplayName="Proximity" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeProximity">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeHeading" DisplayName="Beacon Heading" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeHeading">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeBeaconProximity" DisplayName="Beacon Proximity" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeBeaconProximity">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeRemote" DisplayName="Remote" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeRemote">
        <Description><![CDATA[The Infrared Sensor – Change - Remote mode waits for the Button ID from the IR Beacon to change.  In most cases, the Button ID will change if any button on the IR Beacon is pressed or released. The Button ID measured after the change is output in Measured Value. See Using the Infrared Sensor Remote Mode for more information.]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorChangeProximity" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitInfraredSensorChangeProximity">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorChangeHeading" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitInfraredSensorChangeHeading">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorChangeBeaconProximity" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitInfraredSensorChangeBeaconProximity">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorChangeRemote" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitInfraredSensorChangeRemote">
        <Description><![CDATA[The Infrared Sensor – Change - Remote mode waits for the Button ID from the IR Beacon to change.  In most cases, the Button ID will change if any button on the IR Beacon is pressed or released. The Button ID measured after the change is output in Measured Value. See Using the Infrared Sensor Remote Mode for more information.]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorCompareRemote" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitInfraredSensorCompareRemote">
        <Description><![CDATA[You can wait for a button to be pressed on the IR Beacon. See Using the Infrared Sensor Remote Mode for more information about the Infrared Sensor.Select one or more buttons in the Set of Remote Button IDs and enter the Channel number for the IR Beacon. The block will wait until any one of the selected buttons is pressed. The ID of the button pressed is output in Measured Value.]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorCompareProximity" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Proximity.html#Mode_WaitInfraredSensorCompareProximity">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Compare – Proximity<br/><b>Use:</b> Wait for the Proximity to reach a specified value.</p>]]></Description>
      </Block>
    <Block Mode="WaitInfraredSensorCompareBeaconSeekerHeading" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Beacon.html#Mode_WaitInfraredSensorCompareBeaconSeekerHeading">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Compare – Beacon Heading<br/><b>Use:</b> Wait for the beacon to be detected and for the Heading to reach a specified value.</p>]]></Description>
      </Block>
      <Block Mode="WaitInfraredSensorCompareBeaconSeekerProximity" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Beacon.html#Mode_WaitInfraredSensorCompareBeaconSeekerProximity">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Compare – Beacon Proximity<br/><b>Use:</b> Wait for the beacon to be detected and for the Proximity to reach a specified value.</p>]]></Description>
      </Block>	  
      <Block Mode="LoopInfraredSensorCompareRemote" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopInfraredSensorCompareRemote">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until one of the selected buttons on the IR Beacon is pressed. <br/><br/>See Using the Infrared Sensor Remote Mode.</p>]]></Description>
      </Block>
    <Block Mode="LoopInfraredSensorCompareProximity" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Proximity.html#Mode_LoopInfraredSensorCompareProximity">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Proximity<br/><b>Use:</b> Repeat a sequence of blocks until the Proximity reaches a specified value.</p>]]></Description>
      </Block>
      <Block Mode="LoopInfraredSensorCompareBeaconSeekerHeading" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Beacon.html#Mode_LoopInfraredSensorCompareBeaconSeekerHeading">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Beacon Heading<br/><b>Use:</b> Repeat a sequence of blocks until the beacon Heading reaches a specified value.</p>]]></Description>
      </Block>
      <Block Mode="LoopInfraredSensorCompareBeaconSeekerProximity" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Beacon.html#Mode_LoopInfraredSensorCompareBeaconSeekerProximity">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Beacon Proximity<br/><b>Use:</b> Repeat a sequence of blocks until the beacon Proximity reaches a specified value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchInfraredSensorCompareRemote" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchInfraredSensorCompareRemote">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases depending on whether a specified button on the IR Beacon is pressed (or whether one of a set of specified buttons is pressed).<br/><b>See:</b> Using the Infrared Sensor Remote Mode</p>]]></Description>
      </Block>
    <Block Mode="SwitchInfraredSensorCompareProximity" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Proximity.html#Mode_SwitchInfraredSensorCompareProximity">
        <Description><![CDATA[<p><b>Mode:</b> Infrared Sensor – Beacon Proximity<br/><b>Use:</b> Choose between two sequences of blocks depending on the Proximity.</p>]]></Description>
      </Block>
      <Block Mode="SwitchInfraredSensorCompareBeaconSeekerHeading" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Beacon.html#Mode_SwitchInfraredSensorCompareBeaconSeekerHeading">
        <Description><![CDATA[<p><b>Mode:</b> Compare – Beacon Heading<br/><b>Use:</b> Compare the beacon Heading to a threshold, and get the result on a Logic data wire.</p>]]></Description>
      </Block>
      <Block Mode="SwitchInfraredSensorCompareBeaconSeekerProximity" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Infrared_Beacon.html#Mode_SwitchInfraredSensorCompareBeaconSeekerProximity">
        <Description><![CDATA[<p><b>Mode:</b> Compare – Beacon Proximity<br/><b>Use:</b> Compare the beacon Proximity to a threshold, and get the result on a Logic data wire.</p>]]></Description>
      </Block>
    <Block Mode="SwitchInfraredSensorMeasureBeaconRemote" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchInfraredSensorMeasureBeaconRemote">
        <Description><![CDATA[<p><b>Use:</b> Choose from two or more Cases depending on which button(s) are pressed on the IR Beacon.<br/><b>See:</b> Using the Infrared Sensor Remote Mode</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="RotationSensor" DisplayName="Motor Rotation" DisplayNamePrefix="Rotation">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Motor Rotation</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="MotorPort" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#MotorPort">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than) <br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdDegrees" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdRotations" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdSpeed" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Amount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="AmountRotations" DisplayName="Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Rotation amount in rotations.<br/>Measured from the last reset. Reset with the Reset mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Degrees" DisplayName="Degrees">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Rotation amount in degrees.<br/>Measured from the last reset. Reset with the Reset mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Rotations" DisplayName="Rotations">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Rotation amount in rotations.<br/>Measured from the last reset. Reset with the Reset mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Speed" DisplayName="Current Power">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Current motor power level (-100 to 100).</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureDegrees" DisplayName="Degrees">
        <Description><![CDATA[The Measure – Degrees mode outputs the current motor rotation amount in the Degrees output. The motor rotation is measured in degrees, relative to the last time it was reset with the Reset mode.]]></Description>
      </Block>
      <Block Mode="MeasureRotation" DisplayName="Rotations">
        <Description><![CDATA[The Measure – Rotations mode outputs the current motor rotation amount in the Rotations output. The motor rotation is measured in rotations, relative to the last time it was reset with the Reset mode.]]></Description>
      </Block>
      <Block Mode="MeasureCurrentSpeed" DisplayName="Current Power">
        <Description><![CDATA[The Measure – Current Power mode outputs the current power level of the motor in the Current Power output.]]></Description>
      </Block>
      <Block Mode="CompareDegrees" DisplayName="Degrees">
        <Description><![CDATA[The Compare modes compare the sensor data (Degrees, Rotations, or Power Level) to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sensor data is output in the chosen sensor data type.]]></Description>
      </Block>
      <Block Mode="CompareRotation" DisplayName="Rotations">
        <Description><![CDATA[The Compare modes compare the sensor data (Degrees, Rotations, or Power Level) to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sensor data is output in the chosen sensor data type.]]></Description>
      </Block>
      <Block Mode="CompareCurrentSpeed" DisplayName="Current Power">
        <Description><![CDATA[The Compare modes compare the sensor data (Degrees, Rotations, or Power Level) to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sensor data is output in the chosen sensor data type.]]></Description>
      </Block>
      <Block Mode="ChangeDegrees" DisplayName="Degrees" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeDegrees">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeRotation" DisplayName="Rotations" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeRotation">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeSpeed" DisplayName="Current Power" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeSpeed">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="Reset" DisplayName="Reset">
        <Description><![CDATA[The Reset mode resets the rotation amount to zero (0 degrees or rotations). Future measurements of the motor’s rotation amount using the Motor Rotation sensor will be measured relative to the reset position. Resetting a Motor Rotation sensor has no effect on the power level or position of the motor. Only Motor Rotation sensor readings are affected.]]></Description>
      </Block>
    <Block Mode="WaitRotationSensorCompareDegrees" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_WaitRotationSensorCompareDegrees">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation - Compare<br/><b>Use:</b> Wait for a rotation sensor to reach a certain value (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
    <Block Mode="WaitRotationSensorCompareRotation" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_WaitRotationSensorCompareRotation">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation - Compare<br/><b>Use:</b> Wait for a rotation sensor to reach a certain value (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
      <Block Mode="WaitRotationSensorCompareCurrentSpeed" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_WaitRotationSensorCompareCurrentSpeed">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation - Compare<br/><b>Use:</b> Wait for a rotation sensor to reach a certain value (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
    <Block Mode="WaitRotationSensorChangeDegrees" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitRotationSensorChangeDegrees">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitRotationSensorChangeRotation" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitRotationSensorChangeRotation">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitRotationSensorChangeSpeed" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitRotationSensorChangeSpeed">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="LoopRotationSensorCompareDegrees" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_LoopRotationSensorCompareDegrees">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation<br/><b>Use:</b> Repeat a sequence of blocks until a rotation sensor reaches a certain value (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
      <Block Mode="LoopRotationSensorCompareRotation" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_LoopRotationSensorCompareRotation">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation<br/><b>Use:</b> Repeat a sequence of blocks until a rotation sensor reaches a certain value (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
      <Block Mode="LoopRotationSensorCompareCurrentSpeed" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_LoopRotationSensorCompareCurrentSpeed">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation<br/><b>Use:</b> Repeat a sequence of blocks until a rotation sensor reaches a certain value (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
    <Block Mode="SwitchRotationSensorCompareDegrees" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_SwitchRotationSensorCompareDegrees">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation<br/><b>Use:</b> Choose between two sequences of blocks based on a rotation sensor (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
      <Block Mode="SwitchRotationSensorCompareRotation" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_SwitchRotationSensorCompareRotation">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation<br/><b>Use:</b> Choose between two sequences of blocks based on a rotation sensor (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
      <Block Mode="SwitchRotationSensorCompareCurrentSpeed" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_MotorRotation.html#Mode_SwitchRotationSensorCompareCurrentSpeed">
        <Description><![CDATA[<p><b>Mode:</b> Motor Rotation<br/><b>Use:</b> Choose between two sequences of blocks based on a rotation sensor (Degrees, Rotations, or Current Power).</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="TemperatureSensor" DisplayName="Temperature Sensor" DisplayNamePrefix="Temperature">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Temperature Sensor</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdC" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdF" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Amount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="AmountC" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#AmountC">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Celsius" DisplayName="Temperature Celsius">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Temperature in degrees Celsius (-20 to 120°C).</p>]]></Description>
      </Parameter>
      <Parameter Name="Fahrenheit" DisplayName="Temperature Fahrenheit">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Temperature in degrees Fahrenheit (-4 to 248°F).</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureCelsius" DisplayName="Celsius">
        <Description><![CDATA[The Measure – Celsius mode outputs the temperature in degrees Celsius (°C) in the Temperature Celsius output.]]></Description>
      </Block>
      <Block Mode="MeasureFahrenheit" DisplayName="Fahrenheit">
        <Description><![CDATA[The Measure – Fahrenheit mode outputs the temperature in degrees Fahrenheit (°F) in the Temperature Fahrenheit output.]]></Description>
      </Block>
      <Block Mode="CompareCelsius" DisplayName="Celsius">
        <Description><![CDATA[The Compare – Celsius mode compares the temperature in degrees Celsius (°C) to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the temperature is output in Temperature Celsius.]]></Description>
      </Block>
      <Block Mode="CompareFahrenheit" DisplayName="Fahrenheit">
        <Description><![CDATA[The Compare – Fahrenheit mode compares the temperature in degrees Fahrenheit (°F) to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the temperature is output in Temperature Fahrenheit.]]></Description>
      </Block>
      <Block Mode="ChangeCelsius" DisplayName="Celsius" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeCelsius">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeFahrenheit" DisplayName="Fahrenheit" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeFahrenheit">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitTemperatureSensorCompareCelsius" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Temperature.html#Mode_WaitTemperatureSensorCompareCelsius">
        <Description><![CDATA[<p><b>Mode:</b> Temperature Sensor - Compare<br/><b>Use:</b> Wait for the temperature to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitTemperatureSensorCompareFahrenheit" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Temperature.html#Mode_WaitTemperatureSensorCompareFahrenheit">
        <Description><![CDATA[<p><b>Mode:</b> Temperature Sensor - Compare<br/><b>Use:</b> Wait for the temperature to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="WaitTemperatureSensorChangeCelsius" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitTemperatureSensorChangeCelsius">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitTemperatureSensorChangeFahrenheit" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitTemperatureSensorChangeFahrenheit">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="LoopTemperatureSensorCompareCelsius" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Temperature.html#Mode_LoopTemperatureSensorCompareCelsius">
        <Description><![CDATA[<p><b>Mode:</b> Temperature Sensor<br/><b>Use:</b> Repeat a sequence of blocks until the temperature reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopTemperatureSensorCompareFahrenheit" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Temperature.html#Mode_LoopTemperatureSensorCompareFahrenheit">
        <Description><![CDATA[<p><b>Mode:</b> Temperature Sensor<br/><b>Use:</b> Repeat a sequence of blocks until the temperature reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchTemperatureSensorCompareCelsius" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Temperature.html#Mode_SwitchTemperatureSensorCompareCelsius">
        <Description><![CDATA[<p><b>Mode:</b> Temperature Sensor<br/><b>Use:</b> Choose between two sequences of blocks based on the temperature.</p>]]></Description>
      </Block>
      <Block Mode="SwitchTemperatureSensorCompareFahrenheit" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Temperature.html#Mode_SwitchTemperatureSensorCompareFahrenheit">
        <Description><![CDATA[<p><b>Mode:</b> Temperature Sensor<br/><b>Use:</b> Choose between two sequences of blocks based on the temperature.</p>]]></Description>
      </Block>
    
    </PolyGroup>
    <PolyGroup Name="Timer" DisplayName="Timer">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Timer</b></p>]]></Description>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Timer" DisplayName="Timer ID">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 1 - 8<br/><b>Notes:</b> Which timer to use</p>]]></Description>
      </Parameter>
      <Parameter Name="Timer Value" DisplayName="Elapsed Time">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Time in seconds</p>]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="Threshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare to, in seconds</p>]]></Description>
      </Parameter>
      <Parameter Name="Amount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureTime" DisplayName="Time">
        <Description><![CDATA[The Measure mode outputs a timer value in the Elapsed Time. Time is measured in seconds, starting at the last time the timer was reset using the Reset mode (or from the beginning of the program if the timer has never been reset.]]></Description>
      </Block>
      <Block Mode="CompareTime" DisplayName="Time">
        <Description><![CDATA[The Compare mode compares a timer value to the Threshold Value (in seconds) using the selected Compare Type. The True/False result is output in Compare Result, and the timer value is output in Elapsed Time.]]></Description>
      </Block>
      <Block Mode="ChangeTime" DisplayName="Time" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeTime">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="Reset" DisplayName="Reset">
        <Description><![CDATA[The Reset mode resets the timer specified by the Timer input to zero. The timer starts timing again immediately from zero.See Using the Timer for programming examples.]]></Description>
      </Block>
    <Block Mode="WaitTimerCompareTime" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Timer.html#Mode_WaitTimerCompareTime">
        <Description><![CDATA[<p><b>Mode:</b> Timer - Compare – Time<br/><b>Use:</b> Wait for a timer to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="WaitTimerChangeTime" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitTimerChangeTime">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="LoopTimerCompareTime" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Timer.html#Mode_LoopTimerCompareTime">
        <Description><![CDATA[<p><b>Mode:</b> Timer<br/><b>Use:</b> Repeat a sequence of blocks until a timer reaches a certain value.</p>]]></Description>
      </Block>
    <Block Mode="SwitchTimerCompareTime" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Timer.html#Mode_SwitchTimerCompareTime">
        <Description><![CDATA[<p><b>Mode:</b> Timer<br/><b>Use:</b> Choose between two sequences of blocks based on a timer.</p>]]></Description>
      </Block>
    
    </PolyGroup>
    <PolyGroup Name="TouchSensor" DisplayName="Touch Sensor" DisplayNamePrefix="Touch">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Touch Sensor</b></p>]]></Description>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="State" DisplayName="State">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> Used in Measure mode.<br/>True if the touch sensor is pressed, False if not.</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> The value of the selected sensor state in Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Pressed, Released or Bumped" DisplayName="State">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 2<br/><b>Notes:</b> State to test in Compare mode.<br/>0 = Released<br/>1 = Pressed<br/>2 = Bumped</p>]]></Description>
      </Parameter>
      <Parameter Name="Value" DisplayName="Measured Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> The current sensor state in Compare mode.<br/>0 = Released<br/>1 = Pressed<br/>2 = Bumped</p>]]></Description>
      </Parameter>
      <Block Mode="Measure" DisplayName="State">
        <Description><![CDATA[The Measure – State mode outputs the state of the Touch Sensor in the State output. The State is True if the Touch sensor is currently pressed in, and False if not.]]></Description>
      </Block>
      <Block Mode="Compare" DisplayName="State">
        <Description><![CDATA[In the Compare – State mode, you can choose which state of the Touch Sensor to test (Released, Pressed, or Bumped) in the State input. The True/False value of the selected state is output in the Compare Result. The current state of the sensor is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="ChangeState" DisplayName="State" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeState">
        <Description><![CDATA[The Touch Sensor – Change - State mode waits for the state of the touch sensor to change. If the sensor is Released (not pressed) at the start of the block, it will wait for it to be Pressed. If the sensor is Pressed at the start of the block, it will wait for to be Released. The ending state is output in Measured Value. See Using the Touch Sensor for more information.]]></Description>
      </Block>
    <Block Mode="WaitTouchSensorCompare" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitTouchSensorCompare">
        <Description><![CDATA[You can wait for a Touch Sensor to be Pressed, Released, or Bumped. See Using the Touch Sensor for more information.Select Released, Pressed, or Bumped in the State input. The block will wait for the touch sensor to be in the selected state.]]></Description>
      </Block>
    <Block Mode="WaitTouchSensorChangeState" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitTouchSensorChangeState">
        <Description><![CDATA[The Touch Sensor – Change - State mode waits for the state of the touch sensor to change. If the sensor is Released (not pressed) at the start of the block, it will wait for it to be Pressed. If the sensor is Pressed at the start of the block, it will wait for to be Released. The ending state is output in Measured Value. See Using the Touch Sensor for more information.]]></Description>
      </Block>
    <Block Mode="LoopTouchSensorCompare" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopTouchSensorCompare">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until the Touch Sensor is in the selected state.<br/><br/>See Using the Touch Sensor.</p>]]></Description>
      </Block>
    <Block Mode="SwitchTouchSensorCompare" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchTouchSensorCompare">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases depending on whether the Touch Sensor is Pressed or not, Released or not, or Bumped or not.<br/><b>See:</b> Using the Touch Sensor</p>]]></Description>
      </Block>	 
    
    </PolyGroup>
    <PolyGroup Name="UltrasonicSensor" DisplayName="Ultrasonic Sensor" DisplayNamePrefix="Ultrasonic">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Ultrasonic Sensor</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="Threshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Change" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Change">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Distance" DisplayName="Distance in Centimeters">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Distance in centimeters (0-255 cm).</p>]]></Description>
      </Parameter>
      <Parameter Name="DistanceInches" DisplayName="Distance in Inches">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Distance in inches (0-100 in).</p>]]></Description>
      </Parameter>
      <Parameter Name="Heard" DisplayName="Ultrasound Detected">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True if an ultrasonic signal is detected, otherwise False.</p>]]></Description>
      </Parameter>
      <Parameter Name="Measuring Mode" DisplayName="Measuring Mode">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 or 1<br/><b>Notes:</b> Ultrasonic signal mode in Advanced modes:<br/>0 = Ping<br/>1 = Continuous</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureCentimeters" DisplayName="Distance Centimeters">
        <Description><![CDATA[The Measure – Distance - Centimeters mode outputs the distance in centimeters in the Distance in Centimeters.]]></Description>
      </Block>
      <Block Mode="MeasureInches" DisplayName="Distance Inches">
        <Description><![CDATA[The Measure – Distance - Inches mode outputs the distance in inches in the Distance in Inches.]]></Description>
      </Block>
      <Block Mode="MeasurePresence" DisplayName="Presence">
        <Description><![CDATA[The Measure – Presence mode listens for other ultrasonic signals in “listen only” mode. The Ultrasound Detected output will be True if a signal is detected, otherwise False.]]></Description>
      </Block>
      <Block Mode="CompareCentimeters" DisplayName="Distance Centimeters">
        <Description><![CDATA[The Compare – Distance - Centimeters mode compares the distance in centimeters to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the distance in centimeters is output in Distance in Centimeters.]]></Description>
      </Block>
      <Block Mode="CompareInches" DisplayName="Distance Inches">
        <Description><![CDATA[The Compare – Distance - Inches mode compares the distance in inches to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the distance in inches is output in Distance in Inches.]]></Description>
      </Block>
      <Block Mode="ComparePresence" DisplayName="Presence/Listen">
        <Description><![CDATA[The Compare – Presence mode listens for other ultrasonic signals in “listen only” mode. The Ultrasound Detected output will be True if a signal is detected, otherwise False.]]></Description>
      </Block>
    <Block Mode="WaitUltrasonicSensorComparePresence" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitUltrasonicSensorComparePresence">
        <Description><![CDATA[You can wait for the Ultrasonic Sensor to detect a signal from another Ultrasonic Sensor nearby. The block will wait until an ultrasonic signal is detected. See Using the Ultrasonic Sensor for more information.]]></Description>
      </Block>
    <Block Mode="WaitUltrasonicSensorChangeDistanceCm" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitUltrasonicSensorChangeDistanceCm">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitUltrasonicSensorChangeDistanceInch" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitUltrasonicSensorChangeDistanceInch">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitUltrasonicSensorCompareCentimeters" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Ultrasonic.html#Mode_WaitUltrasonicSensorCompareCentimeters">
        <Description><![CDATA[<p><b>Mode:</b> Ultrasonic Sensor - Compare – Distance<br/><b>Use:</b> Wait for the distance to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitUltrasonicSensorCompareInches" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Ultrasonic.html#Mode_WaitUltrasonicSensorCompareInches">
        <Description><![CDATA[<p><b>Mode:</b> Ultrasonic Sensor - Compare – Distance<br/><b>Use:</b> Wait for the distance to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="LoopUltrasonicSensorComparePresence" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopUltrasonicSensorComparePresence">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until an Ultrasonic signal is detected.<br/><br/>See Using the Ultrasonic Sensor.</p>]]></Description>
      </Block>	 
    <Block Mode="LoopUltrasonicSensorCompareCentimeters" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Ultrasonic.html#Mode_LoopUltrasonicSensorCompareCentimeters">
        <Description><![CDATA[<p><b>Mode:</b> Ultrasonic Sensor - <br/>Compare - Distance<br/><b>Use:</b> Repeat a sequence of blocks until the distance reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopUltrasonicSensorCompareInches" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Ultrasonic.html#Mode_LoopUltrasonicSensorCompareInches">
        <Description><![CDATA[<p><b>Mode:</b> Ultrasonic Sensor - <br/>Compare - Distance<br/><b>Use:</b> Repeat a sequence of blocks until the distance reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchUltrasonicSensorComparePresence" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchUltrasonicSensorComparePresence">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases based on whether an ultrasonic signal is detected in “listen only” mode.<br/><b>See:</b> Using the Ultrasonic Sensor</p>]]></Description>
      </Block>
    <Block Mode="SwitchUltrasonicSensorCompareCentimeters" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Ultrasonic.html#Mode_SwitchUltrasonicSensorCompareCentimeters">
        <Description><![CDATA[<p><b>Mode:</b> Ultrasonic Sensor – Compare - Distance<br/><b>Use:</b> Choose between two sequences of blocks based on the distance.</p>]]></Description>
      </Block>
      <Block Mode="SwitchUltrasonicSensorCompareInches" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_Ultrasonic.html#Mode_SwitchUltrasonicSensorCompareInches">
        <Description><![CDATA[<p><b>Mode:</b> Ultrasonic Sensor – Compare - Distance<br/><b>Use:</b> Choose between two sequences of blocks based on the distance.</p>]]></Description>
      </Block>
      
    
      <Category Name="Advanced" DisplayName="Advanced">
        <Block Mode="Centimeters" DisplayName="Centimeters">
          <Description><![CDATA[The Advanced – Centimeters mode is similar to the Measure – Distance - Centimeters mode, except that you can choose whether the sensor sends a single ultrasonic signal or continuous signals with the Measuring Mode input. The distance in centimeters is output in the Distance.]]></Description>
        </Block>
        <Block Mode="Inches" DisplayName="Inches">
          <Description><![CDATA[The Advanced – Inches mode is similar to the Measure – Distance - Inches mode, except that you can choose whether the sensor sends a single ultrasonic signal or continuous signals with the Measuring Mode input. The distance in inches is output in the Distance.]]></Description>
        </Block>
      </Category>
      <Block Mode="ChangeDistanceCm" DisplayName="Distance Centimeters" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeDistanceCm">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeDistanceInch" DisplayName="Distance Inches" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeDistanceInch">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="EnergyMeter" DisplayName="Energy Meter" DisplayNamePrefix="Energy">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Energy Meter</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="ComparisonOut" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdVolt" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdCurr" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdWatt" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="ThresholdJoule" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Amount" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Amount">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="AmountVolt" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#AmountVolt">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="AmountCurr" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#AmountCurr">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="AmountWatt" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#AmountWatt">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Volts" DisplayName="Measured Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> One of the seven types of electrical data from the Energy Meter. See Using the Energy Meter.</p>]]></Description>
      </Parameter>
      <Parameter Name="Current" DisplayName="Measured Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> One of the seven types of electrical data from the Energy Meter. See Using the Energy Meter.</p>]]></Description>
      </Parameter>
      <Parameter Name="Watts" DisplayName="Measured Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> One of the seven types of electrical data from the Energy Meter. See Using the Energy Meter.</p>]]></Description>
      </Parameter>
      <Parameter Name="Joule" DisplayName="Measured Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> One of the seven types of electrical data from the Energy Meter. See Using the Energy Meter.</p>]]></Description>
      </Parameter>
      <Block Mode="MeasureInVoltage" DisplayName="In Voltage" ShortDisplayName="InV">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureInCurrent" DisplayName="In Current" ShortDisplayName="InA">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureInWatts" DisplayName="In Wattage" ShortDisplayName="InW">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureOutVoltage" DisplayName="Out Voltage" ShortDisplayName="OutV">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureOutCurrent" DisplayName="Out Current" ShortDisplayName="OutA">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureOutWatts" DisplayName="Out Wattage" ShortDisplayName="OutW">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="MeasureJoule" DisplayName="Joule" ShortDisplayName="J">
        <Description><![CDATA[The seven Measure modes each output one of the types of electrical data to the Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareInVoltage" DisplayName="In Voltage">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareInCurrent" DisplayName="In Current">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareInWatt" DisplayName="In Wattage">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareOutVoltage" DisplayName="Out Voltage">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareOutCurrent" DisplayName="Out Current">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareOutWatt" DisplayName="Out Wattage">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="CompareOutJoule" DisplayName="Joule">
        <Description><![CDATA[The seven Compare modes each compare one of the types of electrical data to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the electrical data is output in Measured Value.]]></Description>
      </Block>
      <Block Mode="ChangeInVoltage" DisplayName="In Voltage" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeInVoltage">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeInCurrent" DisplayName="In Current" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeInCurrent">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeInWatt" DisplayName="In Wattage" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeInWatt">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeOutVoltage" DisplayName="Out Voltage" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeOutVoltage">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeOutCurrent" DisplayName="Out Current" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeOutCurrent">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeOutWatt" DisplayName="Out Wattage" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeOutWatt">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangeJoule" DisplayName="Joule" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeJoule">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterCompareInVoltage" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareInVoltage">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterCompareInCurrent" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareInCurrent">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitEnergyMeterCompareInWatt" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareInWatt">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitEnergyMeterCompareOutVoltage" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareOutVoltage">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitEnergyMeterCompareOutCurrent" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareOutCurrent">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitEnergyMeterCompareOutWatt" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareOutWatt">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitEnergyMeterCompareOutJoule" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_WaitEnergyMeterCompareOutJoule">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter - Compare<br/><b>Use:</b> Wait for a data reading to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeInVoltage" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeInVoltage">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeInCurrent" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeInCurrent">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeInWatt" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeInWatt">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeOutVoltage" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeOutVoltage">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeOutCurrent" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeOutCurrent">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeOutWatt" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeOutWatt">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitEnergyMeterChangeJoule" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitEnergyMeterChangeJoule">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="LoopEnergyMeterCompareInVoltage" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareInVoltage">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopEnergyMeterCompareInCurrent" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareInCurrent">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopEnergyMeterCompareInWatt" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareInWatt">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopEnergyMeterCompareOutVoltage" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareOutVoltage">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopEnergyMeterCompareOutCurrent" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareOutCurrent">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopEnergyMeterCompareOutWatt" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareOutWatt">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopEnergyMeterCompareOutJoule" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_LoopEnergyMeterCompareOutJoule">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Repeat a sequence of blocks until a data reading reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchEnergyMeterCompareInVoltage" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareInVoltage">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
      <Block Mode="SwitchEnergyMeterCompareInCurrent" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareInCurrent">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
      <Block Mode="SwitchEnergyMeterCompareInWatt" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareInWatt">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
      <Block Mode="SwitchEnergyMeterCompareOutVoltage" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareOutVoltage">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
      <Block Mode="SwitchEnergyMeterCompareOutCurrent" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareOutCurrent">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
    <Block Mode="SwitchEnergyMeterCompareOutJoule" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareOutJoule">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
      <Block Mode="SwitchEnergyMeterCompareOutWatt" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_EnergyMeter.html#Mode_SwitchEnergyMeterCompareOutWatt">
        <Description><![CDATA[<p><b>Mode:</b> Energy Meter<br/><b>Use:</b> Choose between two sequences of blocks based on a data reading.</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="LightSensor" DisplayName="Light Sensor">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Light Sensor</b></p>]]></Description>
      <Parameter Name="Port" DisplayName="Port">
        <Description><![CDATA[<p>Context help for Parameter <b>Port</b></p>]]></Description>
      </Parameter>
      <Parameter Name="Generate Light?" DisplayName="Generate Light?">
        <Description><![CDATA[<p>Context help for Parameter <b>Generate Light?</b></p>]]></Description>
      </Parameter>
      <Parameter Name="Intensity" DisplayName="Intensity">
        <Description><![CDATA[<p>Context help for Parameter <b>Intensity</b></p>]]></Description>
      </Parameter>
      <Block Mode="NXTLightSensor" DisplayName="NXT Light Sensor">
        <Description><![CDATA[<p>Context help for Block <b>NXT Light Sensor</b></p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="IICSensor" DisplayName="IIC Sensor" DisplayNamePrefix="IIC">
      <Description><![CDATA[<p>Context help for IIC Sensor <b>IIC Sensor</b></p>]]></Description>
      <Block Mode="IICByte" DisplayName="IIC Byte">
        <Description><![CDATA[<p>Context help for Block <b>IIC Byte</b></p>]]></Description>
      </Block>
      <Block Mode="IICWord" DisplayName="IIC Word">
        <Description><![CDATA[<p>Context help for Block <b>IIC Word</b></p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="SoundSensor" DisplayName="NXT Sound Sensor" DisplayNamePrefix="Sound">
      <Description><![CDATA[<p>Context help for PolyGroup <b>NXT Sound Sensor</b></p>]]></Description>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Port" DisplayName="Port" Link="page.html?Path=editor%2FPortSelector.html#Port">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 - 5<br/><b>Notes:</b> 0:  = (Equal to)<br/>1:  ≠ (Not Equal to)<br/>2:  &gt; (Greater than)<br/>3:  ≥ (Greater than or Equal to)<br/>4:  &lt; (Less than)<br/>5:  ≤ (Less than or Equal to)</p>]]></Description>
      </Parameter>
      <Parameter Name="Threshold Value" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> Any number<br/><b>Notes:</b> Value to compare sensor data to</p>]]></Description>
      </Parameter>
      <Parameter Name="Change" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Change">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Notes:</b> True/False result of a Compare mode.</p>]]></Description>
      </Parameter>
      <Parameter Name="Value" DisplayName="Sound Level">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Sound intensity (volume), 0-100.</p>]]></Description>
      </Parameter>
      <Parameter Name="ValuedBa" DisplayName="Sound Level">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Sound intensity (volume), 0-100.</p>]]></Description>
      </Parameter>
      <Parameter Name="CalibrateValueMin" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 – 100<br/><b>Notes:</b> Sound level for Calibrate modes</p>]]></Description>
      </Parameter>
      <Parameter Name="CalibrateValueMax" DisplayName="Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 – 100<br/><b>Notes:</b> Sound level for Calibrate modes</p>]]></Description>
      </Parameter>
      <Block Mode="measuredB" DisplayName="dB">
        <Description><![CDATA[The Measure – dB and Measure - dBa modes each output the sound level in the Sound Level output. In the Measure – dBa mode, the sound level is filtered to approximate the sensitivity of the human ear over different frequencies.The sound level is measured as a percentage (0-100). If the sound sensor has been calibrated, the sound level value is adjusted so that 0 corresponds to the minimum calibrated sound level and 100 corresponds to the maximum calibrated sound level.]]></Description>
      </Block>
      <Block Mode="measuredBa" DisplayName="dBa">
        <Description><![CDATA[The Measure – dB and Measure - dBa modes each output the sound level in the Sound Level output. In the Measure – dBa mode, the sound level is filtered to approximate the sensitivity of the human ear over different frequencies.The sound level is measured as a percentage (0-100). If the sound sensor has been calibrated, the sound level value is adjusted so that 0 corresponds to the minimum calibrated sound level and 100 corresponds to the maximum calibrated sound level.]]></Description>
      </Block>
      <Block Mode="comparedB" DisplayName="dB">
        <Description><![CDATA[The Compare – dB and Compare - dBa modes each measure the sound level as in the Measure modes. The Compare modes then compare the sound level to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sound level is output in Sound Level.]]></Description>
      </Block>
      <Block Mode="comparedBa" DisplayName="dBa">
        <Description><![CDATA[The Compare – dB and Compare - dBa modes each measure the sound level as in the Measure modes. The Compare modes then compare the sound level to the Threshold Value using the selected Compare Type. The True/False result is output in Compare Result, and the sound level is output in Sound Level.]]></Description>
      </Block>
      <Block Mode="ChangedB" DisplayName="dB" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangedB">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="ChangedBa" DisplayName="dBa" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangedBa">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitSoundSensorcomparedB" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_SoundSensor.html#Mode_WaitSoundSensorcomparedB">
        <Description><![CDATA[<p><b>Mode:</b> Sound Sensor - Compare<br/><b>Use:</b> Wait for the sound level to reach a certain value.</p>]]></Description>
      </Block>
      <Block Mode="WaitSoundSensorcomparedBa" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_SoundSensor.html#Mode_WaitSoundSensorcomparedBa">
        <Description><![CDATA[<p><b>Mode:</b> Sound Sensor - Compare<br/><b>Use:</b> Wait for the sound level to reach a certain value.</p>]]></Description>
      </Block>
    <Block Mode="WaitSoundSensorChangedB" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitSoundSensorChangedB">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
    <Block Mode="WaitSoundSensorChangedBa" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitSoundSensorChangedBa">
        <Description><![CDATA[Each of the sensor types listed in the Wait block has one or more Change modes. A Change mode will continuously read data from the sensor and wait for it to change to a different value, or change by an amount that you specify. You can wait for some types of sensor data to change by a certain Amount, and other types to change to a  different value.]]></Description>
      </Block>
      <Block Mode="LoopSoundSensorcomparedB" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_SoundSensor.html#Mode_LoopSoundSensorcomparedB">
        <Description><![CDATA[<p><b>Mode:</b> Sound Sensor<br/><b>Use:</b> Repeat a sequence of blocks until the sound level reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="LoopSoundSensorcomparedBa" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_SoundSensor.html#Mode_LoopSoundSensorcomparedBa">
        <Description><![CDATA[<p><b>Mode:</b> Sound Sensor<br/><b>Use:</b> Repeat a sequence of blocks until the sound level reaches a certain value.</p>]]></Description>
      </Block>
      <Block Mode="SwitchSoundSensorcomparedB" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_SoundSensor.html#Mode_SwitchSoundSensorcomparedB">
        <Description><![CDATA[<p><b>Mode:</b> Sound Sensor<br/><b>Use:</b> Choose between two sequences of blocks based on the sound level.</p>]]></Description>
      </Block>
      <Block Mode="SwitchSoundSensorcomparedBa" DisplayName="" Link="page.html?Path=editor%2FUsingSensors_SoundSensor.html#Mode_SwitchSoundSensorcomparedBa">
        <Description><![CDATA[<p><b>Mode:</b> Sound Sensor<br/><b>Use:</b> Choose between two sequences of blocks based on the sound level.</p>]]></Description>
      </Block>
      <Category Name="Calibrate" DisplayName="Calibrate">
        <Category Name="dB" DisplayName="dB">
          <Block Mode="CalibrateMinSound" DisplayName="Minimum">
            <Description><![CDATA[The Calibrate modes allow you to calibrate the NXT Sound Sensor from within a program. The Calibrate – Minimum mode allows you to specify the minimum sound level in the Value input. After calibration, the NXT Sound Sensor will report this sound level as 0 or the specified value.The Calibrate – Maximum mode allows you to specify the maximum sound level in the Value input. After calibration, the NXT Sound Sensor will report this sound level as 100 or the specified value.The Calibrate – Reset mode restores the NXT Sound Sensor calibration to its default state.]]></Description>
          </Block>
          <Block Mode="CalibrateMaxSound" DisplayName="Maximum">
            <Description><![CDATA[The Calibrate modes allow you to calibrate the NXT Sound Sensor from within a program. The Calibrate – Minimum mode allows you to specify the minimum sound level in the Value input. After calibration, the NXT Sound Sensor will report this sound level as 0 or the specified value.The Calibrate – Maximum mode allows you to specify the maximum sound level in the Value input. After calibration, the NXT Sound Sensor will report this sound level as 100 or the specified value.The Calibrate – Reset mode restores the NXT Sound Sensor calibration to its default state.]]></Description>
          </Block>
          <Block Mode="CalibrateResetSound" DisplayName="Reset">
            <Description><![CDATA[The Calibrate modes allow you to calibrate the NXT Sound Sensor from within a program. The Calibrate – Minimum mode allows you to specify the minimum sound level in the Value input. After calibration, the NXT Sound Sensor will report this sound level as 0 or the specified value.The Calibrate – Maximum mode allows you to specify the maximum sound level in the Value input. After calibration, the NXT Sound Sensor will report this sound level as 100 or the specified value.The Calibrate – Reset mode restores the NXT Sound Sensor calibration to its default state.]]></Description>
          </Block>
        </Category>
      </Category>
    </PolyGroup>
    <PolyGroup Name="FileAccess" DisplayName="File Access">
      <Description><![CDATA[<p>Context help for PolyGroup <b>File Access</b></p>]]></Description>
      <Parameter Name="FileName" DisplayName="File Name">
        <Description><![CDATA[<p>File Name<br/></p>]]></Description>
      </Parameter>
      <Parameter Name="Text" DisplayName="Text">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> Outputs the text from the file as text</p>]]></Description>
      </Parameter>
      <Parameter Name="Error2" DisplayName="Error2">
        <Description><![CDATA[<p>Context help for Parameter <b>Error2</b></p>]]></Description>
      </Parameter>
      <Parameter Name="Numeric" DisplayName="Numeric">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Outputs the text from the file as a numeric value</p>]]></Description>
      </Parameter>
      <Parameter Name="TextIn" DisplayName="Text to Write">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> The text or number to be written to the file</p>]]></Description>
      </Parameter>
      <Block Mode="NXTText" DisplayName="Text">
        <Description><![CDATA[<p>Context help for Block <b>Text</b></p>]]></Description>
      </Block>
      <Category Name="Read" DisplayName="Read">
        <Block Mode="Text" DisplayName="Text">
          <Description><![CDATA[The Read mode sends the data in the text file to the output. You can use the Mode Selector to choose whether the output must be Text or Numeric.  While numbers can be read as Text, if you try and read Text as numbers, the EV3 Brick will behave unexpectedly. You cannot Read from a file until that file has been closed.  See the Close mode below for more information.]]></Description>
        </Block>
        <Block Mode="Numeric" DisplayName="Numeric">
          <Description><![CDATA[The Read mode sends the data in the text file to the output. You can use the Mode Selector to choose whether the output must be Text or Numeric.  While numbers can be read as Text, if you try and read Text as numbers, the EV3 Brick will behave unexpectedly. You cannot Read from a file until that file has been closed.  See the Close mode below for more information.]]></Description>
        </Block>
      </Category>
      <Block Mode="NXTWrite" DisplayName="Write File">
        <Description><![CDATA[<p>Context help for Block <b>Write File</b></p>]]></Description>
      </Block>
      <Block Mode="Write" DisplayName="Write">
        <Description><![CDATA[The Write mode copies text to write data and writes it to the file.  If the file does not exist, this block will create a file.Writing to an existing file will add data to the end of the file. Writing will not erase any pre-existing data.  To re-write a file, first use the Delete mode to delete the file, then use the Write mode to create a new data file.]]></Description>
      </Block>
      <Block Mode="Delete" DisplayName="Delete">
        <Description><![CDATA[The Delete mode permanently deletes the named file.]]></Description>
      </Block>
      <Block Mode="Close" DisplayName="Close">
        <Description><![CDATA[The Close mode closes the file named. You must close a file after you have finished writing to it in order to Read it.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Datalogging" DisplayName="Data Logging">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Data Logging</b></p>]]></Description>
      <Parameter Name="Name" DisplayName="File Name">
        <Description><![CDATA[<p>File Name - name of the experiment that is created when the Data Logging Block runs<br/></p>]]></Description>
      </Parameter>
      <Parameter Name="Duration" DisplayName="Duration">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> ≤ 0<br/><b>Notes:</b> Seconds or Minutes.  Depends on the mode chosen</p>]]></Description>
      </Parameter>
      <Parameter Name="Rate" DisplayName="Rate">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 1 - 1000<br/><b>Notes:</b> </p>]]></Description>
      </Parameter>
      <Parameter Name="Rate Mode" DisplayName="Rate Unit">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0 or 1<br/><b>Notes:</b> 0 = Samples per second<br/>1 = Seconds between Samples</p>]]></Description>
      </Parameter>
      <Block Mode="On" DisplayName="On">
        <Description><![CDATA[The On mode starts the data collection and continues immediately to the next block in the program.  This is useful when you want your robot to perform other actions while it is logging data.]]></Description>
      </Block>
      <Category Name="OnForTime" DisplayName="On For Time">
        <Block Mode="OnForTimeSeconds" DisplayName="Seconds">
          <Description><![CDATA[This mode collects data for a specific number of seconds.  You can determine the number of seconds using the Duration input.]]></Description>
        </Block>
        <Block Mode="OnForTimeMinute" DisplayName="Minutes">
          <Description><![CDATA[This mode collects data for a specific number of minutes.  You can determine the number of minutes using the Duration input.]]></Description>
        </Block>
      </Category>
      <Block Mode="SingleMeasurement" DisplayName="Single Measurement">
        <Description><![CDATA[The Single Measurement mode collects a single data point.]]></Description>
      </Block>
      <Block Mode="Stop" DisplayName="Stop">
        <Description><![CDATA[The Stop mode will stop the collection of data.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Messaging" DisplayName="Messaging">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Messaging</b></p>]]></Description>
      <Parameter Name="Threshold" DisplayName="Threshold Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> </p>]]></Description>
      </Parameter>
      <Parameter Name="Comparison" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Comparison type for a Message Compare Mode with a Threshold Value or Comparison Text.<br/>0: = (Equal)<br/>1: ≠ (Not Equal)<br/>2: &gt; (Greater Than)<br/>3: ≥ (Greater Than or Equal To)<br/>4: &lt; (Less Than)<br/>5: ≤ (Less Than or Equal To)</p>]]></Description>
      </Parameter>
      <Parameter Name="Message Title" DisplayName="Message Title">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> </p>]]></Description>
      </Parameter>
      <Parameter Name="SentMessage" DisplayName="Message">
        <Description><![CDATA[<p><b>Type:</b> Text, Numeric, or Logic<br/><b>Notes:</b> </p>]]></Description>
      </Parameter>
      <Parameter Name="Receiving Brick Name" DisplayName="Receiving Brick Name">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> If this field is left empty your message will be broadcasted.</p>]]></Description>
      </Parameter>
      <Parameter Name="ReceivedMessage" DisplayName="Message">
        <Description><![CDATA[<p><b>Type:</b> Text, Numeric, or Logic<br/><b>Notes:</b> Result of the comparison type</p>]]></Description>
      </Parameter>
      <Parameter Name="Result" DisplayName="Compare Result">
        <Description><![CDATA[<p><b>Type:</b> Text, Numeric, or Logic<br/><b>Notes:</b> Result of the comparison type</p>]]></Description>
      </Parameter>
      <Parameter Name="Comparison2" DisplayName="Compare Type">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Comparison type for a Message Compare Mode with a Threshold Value or Comparison Text.<br/>0: = (Equal)<br/>1: ≠ (Not Equal)<br/>2: &gt; (Greater Than)<br/>3: ≥ (Greater Than or Equal To)<br/>4: &lt; (Less Than)<br/>5: ≤ (Less Than or Equal To)</p>]]></Description>
      </Parameter>
      <Parameter Name="ComparisonText" DisplayName="Comparison Text">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> </p>]]></Description>
      </Parameter>
      <Parameter Name="Direction" DisplayName="Direction" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Direction">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Direction for a Numeric sensor value to change.<br/>Used in Sensor Change Modes that have an Amount input.<br/>0 = Increase<br/>1 = Decrease<br/>2 = Any</p>]]></Description>
      </Parameter>
      <Parameter Name="Change" DisplayName="Amount" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Change">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Notes:</b> Amount for sensor value to change in a Sensor Change Mode</p>]]></Description>
      </Parameter>
      <Category Name="Send" DisplayName="Send">
        <Block Mode="SendText" DisplayName="Text">
          <Description><![CDATA[The Send mode (Text, Numeric or Logic) sends a message by Bluetooth to a connected EV3 Brick.  You can select which EV3 Brick to send the message to using the Receiving Brick Name input.    The Message Title is used to uniquely identify the message being sent.]]></Description>
        </Block>
        <Block Mode="SendNumeric" DisplayName="Numeric">
          <Description><![CDATA[The Send mode (Text, Numeric or Logic) sends a message by Bluetooth to a connected EV3 Brick.  You can select which EV3 Brick to send the message to using the Receiving Brick Name input.    The Message Title is used to uniquely identify the message being sent.]]></Description>
        </Block>
        <Block Mode="SendBoolean" DisplayName="Logic">
          <Description><![CDATA[The Send mode (Text, Numeric or Logic) sends a message by Bluetooth to a connected EV3 Brick.  You can select which EV3 Brick to send the message to using the Receiving Brick Name input.    The Message Title is used to uniquely identify the message being sent.]]></Description>
        </Block>
      </Category>
      <Category Name="Receive" DisplayName="Receive">
        <Block Mode="ReceiveText" DisplayName="Text">
          <Description><![CDATA[The Receive mode (Text, Numeric or Logic) receives a message by Bluetooth from a connected EV3 Brick.  The Received Message output will be False until a message has been received. The message that is received is available from the Message output.  The Message Title is used to uniquely identify the message being received.]]></Description>
        </Block>
        <Block Mode="ReceiveNumeric" DisplayName="Numeric">
          <Description><![CDATA[The Receive mode (Text, Numeric or Logic) receives a message by Bluetooth from a connected EV3 Brick.  The Received Message output will be False until a message has been received. The message that is received is available from the Message output.  The Message Title is used to uniquely identify the message being received.]]></Description>
        </Block>
        <Block Mode="ReceiveBoolean" DisplayName="Logic">
          <Description><![CDATA[The Receive mode (Text, Numeric or Logic) receives a message by Bluetooth from a connected EV3 Brick.  The Received Message output will be False until a message has been received. The message that is received is available from the Message output.  The Message Title is used to uniquely identify the message being received.]]></Description>
        </Block>
      </Category>
      <Block Mode="CompareText" DisplayName="Text">
        <Description><![CDATA[The Compare mode (Text, Numeric, or Logic) compares the received message with an existing value.  If the conditions are met, the Compare Result output is True.  If the conditions are not met, the Compare Result output is False.Numeric: The received message is compared to a threshold value according to one of the following logic operators.]]></Description>
      </Block>
      <Block Mode="CompareNumeric" DisplayName="Numeric">
        <Description><![CDATA[The Compare mode (Text, Numeric, or Logic) compares the received message with an existing value.  If the conditions are met, the Compare Result output is True.  If the conditions are not met, the Compare Result output is False.Numeric: The received message is compared to a threshold value according to one of the following logic operators.]]></Description>
      </Block>
      <Block Mode="CompareBoolean" DisplayName="Logic">
        <Description><![CDATA[The Compare mode (Text, Numeric, or Logic) compares the received message with an existing value.  If the conditions are met, the Compare Result output is True.  If the conditions are not met, the Compare Result output is False.Numeric: The received message is compared to a threshold value according to one of the following logic operators.]]></Description>
      </Block>
      <Block Mode="ChangeTextUpdate" DisplayName="Text" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeTextUpdate">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
      <Block Mode="ChangeNumericUpdate" DisplayName="Numeric" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeNumericUpdate">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
      <Block Mode="ChangeBooleanUpdate" DisplayName="Logic" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeBooleanUpdate">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
      <Block Mode="ChangeTextValue" DisplayName="Text" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeTextValue">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
      <Block Mode="ChangeNumericValue" DisplayName="Numeric" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeNumericValue">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
      <Block Mode="ChangeBooleanValue" DisplayName="Logic" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_ChangeBooleanValue">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="WaitMessagingCompareText" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingCompareText">
        <Description><![CDATA[You can wait for a message to be received that matches a specified comparison. See Messaging for more information.]]></Description>
      </Block>
    <Block Mode="WaitMessagingCompareNumeric" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingCompareNumeric">
        <Description><![CDATA[You can wait for a message to be received that matches a specified comparison. See Messaging for more information.]]></Description>
      </Block>
      <Block Mode="WaitMessagingCompareBoolean" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingCompareBoolean">
        <Description><![CDATA[You can wait for a message to be received that matches a specified comparison. See Messaging for more information.]]></Description>
      </Block>
    <Block Mode="WaitMessagingChangeTextUpdate" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingChangeTextUpdate">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="WaitMessagingChangeNumericUpdate" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingChangeNumericUpdate">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="WaitMessagingChangeBooleanUpdate" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingChangeBooleanUpdate">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="WaitMessagingChangeTextValue" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingChangeTextValue">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="WaitMessagingChangeNumericValue" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingChangeNumericValue">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="WaitMessagingChangeBooleanValue" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FWait.html#Mode_WaitMessagingChangeBooleanValue">
        <Description><![CDATA[The Messaging – Change modes wait for a message of the specified type and Message Title to be received with a value that is different from the last matching message type.The Messaging – Update modes wait for a message of the matching type (Text, Numeric, or Logic) and Message Title to be received. The message value is output in Message]]></Description>
      </Block>
    <Block Mode="LoopMessagingCompareText" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopMessagingCompareText">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until the specified message type is received. <br/><br/>See Messaging Block.</p>]]></Description>
      </Block>
      <Block Mode="LoopMessagingCompareNumeric" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopMessagingCompareNumeric">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until the specified message type is received. <br/><br/>See Messaging Block.</p>]]></Description>
      </Block>
      <Block Mode="LoopMessagingCompareBoolean" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FLoopCondition.html#Mode_LoopMessagingCompareBoolean">
        <Description><![CDATA[<p><b>Notes:</b> Loop repeats until the specified message type is received. <br/><br/>See Messaging Block.</p>]]></Description>
      </Block>
    <Block Mode="SwitchMessagingCompareText" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchMessagingCompareText">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases based on a message value.<br/><b>See:</b> Messaging</p>]]></Description>
      </Block>
      <Block Mode="SwitchMessagingCompareNumeric" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchMessagingCompareNumeric">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases based on a message value.<br/><b>See:</b> Messaging</p>]]></Description>
      </Block>
      <Block Mode="SwitchMessagingCompareBoolean" DisplayName="" Link="page.html?Path=blocks%2FLEGO%2FCaseSelector.html#Mode_SwitchMessagingCompareBoolean">
        <Description><![CDATA[<p><b>Use:</b> Choose between two Cases based on a message value.<br/><b>See:</b> Messaging</p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Bluetooth" DisplayName="Bluetooth Connection">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Bluetooth Connection</b></p>]]></Description>
      <Parameter Name="Connect To" DisplayName="Connect To">
        <Description><![CDATA[<p><b>Type:</b> Text<br/><b>Notes:</b> Specifies the Bluetooth device that a connection will be initiated with, or for which the connection will be closed.</p>]]></Description>
      </Parameter>
      <Block Mode="On" DisplayName="On">
        <Description><![CDATA[The On mode will turn on Bluetooth on the EV3 Brick running the program.]]></Description>
      </Block>
      <Block Mode="Off" DisplayName="Off">
        <Description><![CDATA[The Off mode will turn off Bluetooth on the EV3 Brick running the program.]]></Description>
      </Block>
      <Block Mode="Initiate" DisplayName="Initiate">
        <Description><![CDATA[The Initiate mode initiates a connection with a specified Bluetooth device. Use the Connect To input to enter the device name. A Bluetooth connection is maintained until the Close Connection mode is used.]]></Description>
      </Block>
      <Block Mode="Clear" DisplayName="Clear">
        <Description><![CDATA[Use the Close mode to end a connection with a Bluetooth device.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="KeepAlive" DisplayName="Keep Awake">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Keep Awake</b></p>]]></Description>
      <Parameter Name="Time until sleep (ms)" DisplayName="Time Until Sleep">
        <Description><![CDATA[<p><b>Type:</b> Numeric</p>]]></Description>
      </Parameter>
      <Block Mode="KeepAlive" DisplayName="Keep Awake">
        <Description><![CDATA[The Time Until Sleep output shows how many milliseconds remain before the EV3 Brick is due to go into sleep mode. Since the Keep Awake block resets the EV3 Brick sleep timer immediately after this block runs, the Time Until Sleep will be the same as the Sleep Setting. The Keep Awake block only has one mode.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="RawSensorValue" DisplayName="Raw Sensor Value">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Raw Sensor Value</b></p>]]></Description>
      <Parameter Name="Port Number" DisplayName="Port Number">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 1-4<br/><b>Notes:</b> Selects the sensor port.  Motor ports cannot be used with the Raw Sensor Block.</p>]]></Description>
      </Parameter>
      <Parameter Name="Raw Value" DisplayName="Raw Value">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> 0-1023<br/><b>Notes:</b> Raw Sensor Value</p>]]></Description>
      </Parameter>
      <Block Mode="Raw" DisplayName="Raw Sensor Value">
        <Description><![CDATA[All sensors output raw values. Programming blocks take these numbers and convert them into more meaningful numbers.  For example, the Color Sensor block, in Color mode, converts the raw values from the Color Sensor into numbers from 0 to 7. These numbers correspond to specific colors.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="UnregulatedMotor" DisplayName="Unregulated Motor">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Raw Motor On</b></p>]]></Description>
      <Parameter Name="MotorPort" DisplayName="MotorPort" Link="page.html?Path=editor%2FPortSelector.html#MotorPort">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Power" DisplayName="Power">
        <Description><![CDATA[<p><b>Type:</b> Numeric<br/><b>Allowed Values:</b> -100 to 100<br/><b>Notes:</b> Motor Power Level</p>]]></Description>
      </Parameter>
      <Block Mode="UnregulatedMotor" DisplayName="Unregulated Motor">
        <Description><![CDATA[The Unregulated Motor block does not include automatic motor control, like the normal Medium Motor block and the Large Motor block. This means that no automatic regulation on motor power will be included. The specified Power input is what is used to control the motor. You can control the speed and direction of the motor using the Power input. The motor will run until it is stopped or changed by a Medium Motor block or a Large Motor block later in the program or until the program ends.Inputs used: Power]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="InvertMotor" DisplayName="Invert Motor">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Invert Motor</b></p>]]></Description>
      <Parameter Name="MotorPort" DisplayName="MotorPort" Link="page.html?Path=editor%2FPortSelector.html#MotorPort">
        <Description><![CDATA[Many programming blocks require that you select the ports on the EV3 Brick (A, B, C, D, 1, 2, 3, and 4) that these blocks will use. The Port Selectors are in the top right-hand corner of these blocks.]]></Description>
      </Parameter>
      <Parameter Name="Invert" DisplayName="Invert">
        <Description><![CDATA[<p><b>Type:</b> Logic<br/><b>Allowed Values:</b> True/False<br/><b>Notes:</b> If True, the selected motor has its normal “forward” and “backward” directions swapped.<br/><br/>If False, the selected motor will turn in the normal direction.</p>]]></Description>
      </Parameter>
      <Block Mode="Invert" DisplayName="Invert Motor">
        <Description><![CDATA[The Invert Motor has a single mode named Invert Motor. If the Invert input is True, the selected motor will have its normal “forward” and “backward” directions swapped. Any programming blocks after the Invert Motor block that would normally make the motor turn clockwise will instead make the motor turn counter-clockwise, and vice-versa.Once a motor direction is inverted, it will stay inverted until another Invert Motor block changes it back with Invert equal to False.For information on the normal motor directions, see: Medium Motor Power and DirectionLarge Motor Power and Direction]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="StopBlock" DisplayName="Stop Program">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Stop Program</b></p>]]></Description>
      <Block Mode="Stop" DisplayName="Stop Program" Link="page.html?Path=blocks%2FLEGO%2FStopBlock.html#Mode_Stop">
        <Description><![CDATA[The Stop Program block immediately terminates all programming block sequences and ends the program.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="CommentBlock" DisplayName="Comment">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Stop Program</b></p>]]></Description>
      <Block Mode="Comment" DisplayName="Comment" Link="page.html?Path=blocks%2FLEGO%2FCommentBlock.html#Mode_Comment">
        <Description><![CDATA[The Comment Block allows you to write comments within a program.  This block is not a programming block, which means that no programmable action is associated with it.  It is often used to provide an explanation of the subsequent blocks and expected actions.]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="HWPageManualInput" DisplayName="HWPageManualInput">
      <Description><![CDATA[<p>Context help for PolyGroup <b>HWPageManualInput</b></p>]]></Description>
      <Block Mode="NoSensor" DisplayName="No Sensor">
        <Description><![CDATA[<p>Context help for Block <b>No Sensor</b></p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="HWPageManualOutput" DisplayName="HWPageManualOutput">
      <Description><![CDATA[<p>Context help for PolyGroup <b>HWPageManualOutput</b></p>]]></Description>
      <Block Mode="NoSensor" DisplayName="No Sensor">
        <Description><![CDATA[<p>Context help for Block <b>No Sensor</b></p>]]></Description>
      </Block>
    </PolyGroup>
    <PolyGroup Name="Datalogger" DisplayName="Datalogger">
      <Description><![CDATA[<p>Context help for PolyGroup <b>Datalogger</b></p>]]></Description>
      <Block Mode="NoSensor" DisplayName="No Sensor">
        <Description><![CDATA[<p>Context help for Block <b>No Sensor</b></p>]]></Description>
      </Block>
    </PolyGroup>
  </PolyGroups>
<formatOutput>1</formatOutput></EditorStrings>
